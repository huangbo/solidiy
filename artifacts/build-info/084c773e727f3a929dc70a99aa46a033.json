{
	"id": "084c773e727f3a929dc70a99aa46a033",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"HelloWord.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\n// contract ValueTypes {\n//     string public myString = \"hello world\";\n//     bool public b = true;\n//     uint public u = 123; \n//     int public i = -123;\n//     int public minInt = type(int).min;\n//     int public maxInt = type(int).max;\n//     address public addr = 0xC4CB0f670DFdC7c28F49F63feAacb2E10BAFdeC7;\n// }\n\n// contract FunctionIntro {\n//     function add(uint x, uint y) external pure returns (uint) {\n//         return x + y;\n//     }\n// }\n\n// external 外部函数，调用需要通过this\n// contract externalTest {\n//     uint8 id;\n//     function setId(uint8 newId) public {\n//         id = newId;\n//     }\n//     function getId() public view returns (uint8) {\n//         return this.getIdByexternal();\n//     }\n\n//     function getIdByexternal() external view returns(uint8) {\n//         return id;\n//     }\n// }\n\n// contract subExternalTest is externalTest {\n//     function getexternalId() public view returns(uint8) {\n//         return this.getIdByexternal();\n//     }\n// }\n\n// internal 内部函数，不使用this\n// contract internalTest {\n//     uint8 internal id;\n//     function setId(uint8 newId) public {\n//         id = newId;\n//     }\n//     function getId() public view returns (uint8) {\n//         return getIdByinternal();\n//     }\n\n//     function getIdByinternal() internal view returns(uint8) {\n//         return id;\n//     }\n// }\n\n// contract subinternalTest is internalTest {\n//     function getsubId() public view returns(uint8) {\n//         return id;\n//     }\n\n//     function getsubexternalId() public view returns(uint8) {\n//         return getIdByinternal();\n//     }\n// }\n\n\n// private 只能当前定义合约中访问，子合约无法访问\n// contract privateTest {\n//     uint8 private id;\n//     function setId(uint8 newId) public {\n//         id = newId;\n//     }\n//     function getId() public view returns (uint8) {\n//         return getIdByprivate();\n//     }\n\n//     function getIdByprivate() private view returns(uint8) {\n//         return id;\n//     }\n// }\n\n// contract subprivateTest is privateTest {\n//     function getsubId() public view returns(uint8) {\n//         // return id;\n//         // return getIdByprivate();\n//         return getId();\n\n//     }\n// }\n\n// 可以修饰变量和函数，函数的默认类型为public，变量的默认类型为internal（不能为external）。\n// 内部调用不会产生EVM调用也称为消息调用，外部调用会产生EVM调用\n// public 在合约外部和合约内部都可以调用\n// external 外部调用，只能在合约外部调用（如果在合约内部包括继承子合约调用，调用需要通过this，不推荐这样），需要this访问，因为只能在合约外部访问，所以子合约也不能override\n// internal 内部调用，当前合约和继承子合约可以调用\n// private  只能当前合约中访问，继承子合约无法访问\n\n// contract FunctionTypes {\n//     uint256 public number = 5;\n\n//     function add(uint256 n) external pure returns(uint256) {\n//         return n + 1;\n//     }\n\n//     function add1() external view returns(uint256) {\n//         return number + 1;\n//     }\n\n//     function add2() external {\n//         number = 10;\n//     }\n// }\n\n// pure 不能读也不能写链上的状态变量number，传入参数进行简单操作\n// view 可以读到链上的状态变量，但是不能写\n// 默认可以读写\n\n// contract PayTest {\n//     function getbalance() public view returns(uint){\n//         return address(this).balance;\n//     }\n\n//     function getaddr() public view returns(address){\n//         return address(this);\n//     }\n//     function transferToContract() public payable returns(uint256) {\n//         return address(this).balance;\n//     }\n//     // 给调用者转账\n//     function transferFromContract() public payable {\n//         payable(address(msg.sender)).transfer(10**18 wei);\n//     }\n// }\n\n// contract Payable {\n//     address payable public owner;\n//     constructor() {\n//         owner = payable(msg.sender);\n//     }\n\n//     function deposit() external payable {\n\n//     }\n//     function getBalance() external view returns(uint) {\n//         return address(this).balance;\n//     }\n// }\n\n// payable 函数在被调用的时候会将value转入到合约\n// 全局变量 msg.sender msg.value msg表示调用这个函数的地址，可能是一个人也有可能是一个合约\n\n// contract Constants {\n//     address public constant MY_ADDRESS = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n//     uint public constant MY_UINT = 123;\n// }\n\n// contract ConstantsNew {\n//     address public MY_ADDRESS = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n//     uint public MY_UINT = 123;\n// }\n\n// contract Immutable {\n//     // address public immutable owner = msg.sender;\n\n//     address public immutable owner;\n//     constructor(address x) {\n//         owner = x;\n//     }\n// }\n\n// constant 更节省gas，如果状态变量声明为 constant (常量)。在这种情况下，只能使用那些在编译时有确定值的表达式来给它们赋值。\n// 使用immutable更节省gas，声明为不可变量(immutable)的变量的限制要比声明为常量(constant) 的变量的限制少：可以在合约的构造函数中或声明时为不可变的变量分配任意值。 不可变量在构造期间无法读取其值，并且只能赋值一次。\n\n// contract Error {\n//     error MyError(address caller, uint i);\n\n//     function testRequire(uint _i) public pure {\n//         require(_i <= 10, \"require: i > 10\");\n//     }\n//     function testRevert(uint _r) public pure {\n//         if (_r > 10) {\n//             revert(\"revert: r > 10\");\n//         }\n//     }\n//     function testAssert(uint _a) public pure {\n//         assert(_a == 123);\n//     }\n//     function testCustomError(uint _i) public view {\n//         if (_i > 10) {\n//             revert MyError(msg.sender, _i);\n//         }\n//     }\n// }\n\n// require revert assert 具有gas费的退还，状态的回滚\n// 自定义错误有节省gas的作用\n\n// contract FunctionModifier {\n//     bool public paused;\n//     uint public count;\n\n//     function setPaused(bool _paused) external {\n//         paused = _paused;\n//     }\n\n//     modifier whenNotPaused() {\n//         require(!paused, \"paused\");\n//         _;\n//     }\n\n//     modifier cap(uint _x) {\n//         require(_x > 10, \"require error\");\n//         _;\n//         count += 1;\n//     }\n\n//     function inc(uint _x) external whenNotPaused cap(_x) {\n//         count += _x;\n//     }\n// }\n// 函数修改器\n\n// contract FunctionOutputs {\n//     function returnMany() public pure returns(uint x, bool b) {\n//         return (1, true);\n//     }\n\n//     function callRetrun() public pure returns(bool) {\n//         // (uint x, bool b) = returnMany();\n//         // return (x, b);\n//         (, bool b) = returnMany();\n//         return b;\n//     }\n// }\n\n// contract Array {\n//     uint[] public nums = [1, 2, 3]; // 可变长度数组\n//     uint[3] public numsFixed = [4, 5, 6]; // 不可变长度数组\n\n//     function examples() external {\n//         nums.push(4);\n//         delete nums[1]; // 不能删除元素，置为0，可以使用pop\n//         nums.pop();\n//         uint len = nums.length;\n\n//         // create array in memory，在内存中只能定义定长数组，不能使用push pop方法\n//         uint[] memory a = new uint[](5);\n//     }\n\n//     function getAllArray() external view returns(uint[] memory) {\n//         return nums;\n//     }\n\n// }\n\n// 数组\n\n// contract memoryStorage {\n//     uint public a = 1;\n\n//     function modifierFun(uint memory x) external returns(uint) {\n//         uint b = x;\n//         return b;\n//     }\n// }\n// 状态变量 – 变量值永久保存在合约存储空间中的变量。\n// 局部变量 – 变量值仅在函数执行过程中有效的变量，函数退出后，变量无效。\n// 全局变量 – 保存在全局命名空间，用于获取区块链相关信息的特殊变量。\n\n// solidity数据存储位置有三类：storage，memory和calldata。\n// memory：函数里的参数和临时变量一般用memory，存储在内存中，不上链。\n// calldata：和memory类似，存储在内存中，不上链。与memory的不同点在于calldata变量不能修改 immutable。\n// storage：合约中状态变都为storage，存储在以太坊区块链中\n/* \nExplicit data location for all variables of struct, array or mapping types is now mandatory. \nThis is also applied to function parameters and return variables.\n For example, change uint[] x = m_x to uint[] storage x = m_x, and function f(uint[][] x) to function f(uint[][] memory x) where memory is the data location and might be replaced by storage or calldata accordingly.\n  Note that external functions require parameters with a data location of calldata.\n*/\n\n// storage给storage赋值或者memory给memory赋值，是创建引用，不同之间的两两赋值是创建副本。\n\n\n// contract Mapping {\n//     mapping(address => uint) public balances;\n//     mapping(address => mapping(address => bool)) public isFriends;\n\n//     function MappingFun() external {\n//         balances[msg.sender] = 123;\n//         uint val1 = balances[msg.sender];\n//         uint val2 = balances[address(1)]; // 返回uint 的默认值0\n\n//         isFriends[msg.sender][address(this)] = true;\n//     }\n// }\n\n// contract TestContract1 {\n//     address public owner = msg.sender;\n\n//     function setOwner(address _owner) public {\n//         require(msg.sender == owner, \"not owner\");\n//         owner = _owner;\n//     }\n// }\n\n// contract TestContract2 {\n//     address public owner = msg.sender;\n//     uint public value = msg.value;\n//     uint public x;\n//     uint public y;\n\n//     constructor(uint _x, uint _y) payable {\n//         x = _x;\n//         y = _y;\n//     }\n// }\n\n// contract Proxy {\n//     event Deploy(address);\n\n//     function deploy(bytes memory _code) external payable returns (address addr) {\n//         assembly {\n//             addr := create(callvalue(), add(_code, 0x20), mload(_code))\n//         }\n//         require(addr != address(0), \"deploy failed\");\n//         emit Deploy(addr);\n//     }\n\n//     function execute(address _target, bytes memory _data) external payable {\n//         (bool sucess, ) = _target.call{value: msg.value}(_data);\n//         require(sucess, \"failed\");\n//     }\n\n    \n// }\n\n// contract Helper {\n//     function getBytecode1() external pure returns (bytes memory) {\n//         bytes memory bytecode = type(TestContract1).creationCode;\n//         return bytecode;\n//     }\n\n//     function getBytecode2(uint _x, uint _y) external pure returns (bytes memory) {\n//         bytes memory bytecode = type(TestContract2).creationCode;\n//         return abi.encodePacked(bytecode, abi.encode(_x, _y)); // 构造函数\n//     }\n\n//     function getCalldata(address _owner) external pure returns (bytes memory) {\n//         return abi.encodeWithSignature(\"setOwner(address)\", _owner);\n//     }\n// }\n\n// 代理合约\n\n// contract Event {\n//     event Log(string message, uint val);\n//     event IndexedLog(address indexed sender, uint val); // indexed 可以链上检索\n\n//     function example() external { //也是一个写入方法\n//         emit Log(\"foo\", 1234);\n//         emit IndexedLog(msg.sender, 789);\n//     }\n\n//     event Message(address indexed _from, address indexed _to, string message);\n\n//     function sendMessage(address _to, string calldata message) external {\n//         emit Message(msg.sender, _to, message);\n//     }\n\n// }\n\n// contract Account {\n//     address public bank;\n//     address public owner;\n\n//     constructor(address _owner) payable {\n//         owner = _owner;\n//         bank = msg.sender;\n//     }\n// }\n\n// contract AccountFactory {\n//     uint public b;\n//     Account[] public accounts;\n//     function createAccount(address _owner) external payable {\n//         Account account = new Account{value: 111}(_owner);\n//         accounts.push(account);\n//     }\n//     function getBalance(address _owner) external {\n//         b =  _owner.balance;\n//     }\n// }\n\n// 工厂合约\n\n// EVENT 体现在区块链浏览器或者交易记录中的logs中\n\n// contract A {\n//     function foo() public pure virtual returns (string memory) {\n//         return 'A';\n//     }\n// }\n\n// contract B is A {\n//     function foo() public pure override virtual returns (string memory) {\n//         return \"B\";\n//     }\n// }\n\n// contract C is B {\n//     function foo() public pure override virtual returns (string memory) {\n//         return \"C\";\n//     }\n// }\n\n// contract X is A, B { // 顺序从最接近基类的开始到最派生的顺序\n//     function foo() public pure override(A, B) virtual returns (string memory) {\n//         return \"X\";\n//     }\n// }\n// virtual 可以被子合约重写，override 重写父合约\n\n// ---------------\n\n// contract S {\n//     string public name;\n//     constructor(string memory _name) {\n//         name = _name;\n//     }\n// }\n\n// contract T {\n//     string public text;\n//     constructor(string memory _text) {\n//         text = _text;\n//     }\n// }\n\n// contract Z is S, T {\n//     constructor(string memory _name, string memory _text) S(_name) T(_text) {\n\n//     }\n// }\n// 继承构造函数初始化\n\n// contract E {\n//     event Log(string message);\n\n//     function foo() public virtual {\n//         emit Log(\"E.foo\");\n//     }\n\n//     function bar() public virtual {\n//         emit Log(\"E.bar\");\n//     }\n// }\n\n// contract F is E {\n//     function foo() public virtual override {\n//         emit Log(\"F.foo\");\n//         E.foo();\n//     }\n\n//     function bar() public virtual override {\n//         emit Log(\"F.bar\");\n//         super.bar();\n//     }\n// }\n\n// contract G is E {\n//     function foo() public virtual override {\n//         emit Log(\"G.foo\");\n//         E.foo();\n//     }\n\n//     function bar() public virtual override {\n//         emit Log(\"G.bar\");\n//         super.bar();\n//     }\n// }\n\n// contract H is F, G {\n//     function foo() public virtual override(F, G) {\n//         emit Log(\"H.foo\");\n//         F.foo();\n//     }\n\n//     function bar() public virtual override(F, G) {\n//         emit Log(\"H.bar\");\n//         super.bar();\n//     }\n// }\n\n// 调用父级合约\n\ncontract Fallback {\n    event Log(string func, address sender, uint value, bytes data);\n    fallback() external payable {\n        emit Log(\"fallback\", msg.sender, msg.value, msg.data);\n    }\n    receive() external payable {\n        emit Log(\"receive\", msg.sender, msg.value, \"\");\n    } \n}\n\n// fallback回退函数当调用函数在合约不存在或者向合约中发放主币的时候（回退函数是payable的时候）\n// msg.data存在的时候调用fallback，不存在调用receive，如果receive不存在，那么还是调用fallback\n\n// contract SendEther {\n//     constructor() payable {}\n//     // receive() external payable {}\n\n//     function getBalance() external view returns (uint) {\n//         return address(this).balance;\n//     }\n//     function sendViaTransfer(address payable _to) external payable {\n//         // 发送主币的时候只携带2300个gas，如果gas消耗完或者发送主币的时候对方拒收或者逻辑异常，会revert\n//         _to.transfer(123);\n//     }\n//     function sendViaSend(address payable _to) external payable {\n//         // 发送主币的时候只携带2300个gas，会返回一个bool值，发送失败不会自动revert交易，几乎没有人用它\n//        bool s = _to.send(123);\n//        require(s, \"send faild\");\n//     }\n\n//     function sendViaCall(address payable _to) external payable {\n//         // 会发送所有剩余的gas，返回一个bool和一个data，是最提倡的方法\n//        (bool success, ) =  _to.call{value: 123}(\"\");\n//        require(success, \"call faild\");\n//     }\n// }\n\ncontract EthReceiver {\n    event Log(uint amount , uint gas);\n\n    receive() external payable {\n        emit Log(msg.value, gasleft());\n    } \n}\n// 三种发送主币的方法\n\n// contract TestContract {\n//     uint public x;\n//     uint public value = 123;\n\n//     function setX(uint _x) external {\n//         x = _x;\n//     }\n//     function getX() external view returns(uint) {\n//         return x;\n//     }\n//     function setXandReceiveEther(uint _x) external payable {\n//         x = _x;\n//         value = msg.value;\n//     }\n//     function getXandValue() external view returns (uint, uint) {\n//         return (x, value);\n//     }\n// }\n\n// contract CallTestContract {\n//     function setX(address _address, uint _x) external {\n//         TestContract(_address).setX(_x);\n//     }\n//     function getX(address _address) external view returns (uint) {\n//         return TestContract(_address).getX();\n//     } \n//     function setXandReceiveEther(address _address, uint _x) external payable {\n//         TestContract(_address).setX(_x);\n//         TestContract(_address).setXandReceiveEther{value: msg.value}(_x);\n//     }\n//     function getXandValue(address _address) external view returns (uint _x, uint _value) {\n//         (_x, _value) = TestContract(_address).getXandValue();\n//     }\n// }\n// 一个合约调用另一个合约\n\n// contract Counter {\n//     uint public count;\n\n//     function inc() external {\n//         count += 1;\n//     }\n\n// }\n\n\n// interface ICounter {\n//     function count() external view returns (uint);\n//     function inc() external;\n// }\n\n// contract CallInterface {\n//     uint public count;\n//     function callExample(address _address) external returns(uint) {\n//         ICounter(_address).inc();\n//         count = ICounter(_address).count();\n//         return count;\n//     }\n// }\n\n// 接口合约\n// contract TestCall {\n//     string public message;\n//     uint public x;\n\n//     event Log(string message);\n\n//     fallback() external payable {\n//         emit Log(\"fallback was called\");\n//     }\n\n//     function foo(string memory _message, uint _x) external payable returns (bool, uint) {\n//         message = _message;\n//         x = _x;\n//         return (true, 999);\n//     }\n// }\n\n// contract Call {\n//     bytes public data;\n//     function callFoo(address _address) external payable {\n//         (bool success, bytes memory _data) = _address.call{value: 111}(abi.encodeWithSignature(\"foo(string,uint256)\", \"call foo\", 123));\n//         require(success, \"call faild\");\n//         data = _data;\n//     }\n\n//     function callDotExit(address _address) external {\n//         (bool success, ) = _address.call(abi.encodeWithSignature(\"callDotExit()\"));\n//         require(success, \"call faild\");\n//     }\n// }\n\n// 低级call使用\n\n\n// contract TestDelegateCall {\n//     uint public num;\n//     address public sender;\n//     uint public value;\n\n//     function setVars(uint _num) external payable {\n//         num = _num;\n//         sender = msg.sender;\n//         value = msg.value;\n//     }\n// }\n\n// contract DelegateCall {\n//     uint public num;\n//     address public sender;\n//     uint public value;\n\n//     function setVars(address _address, uint _num) external payable {\n//         // _address.delegatecall(abi.encodeWithSignature(\"setVars(uint256)\", _num));\n//         (bool success, bytes memory _data) = _address.delegatecall(\n//             abi.encodeWithSelector(TestDelegateCall.setVars.selector, _num)\n//         );\n//         require(success, \"fail call\");\n//     }\n// }\n\n// 委托调用，被委托调用合约的状态变量不会改变，只会使用被委托调用合约的逻辑。\n\n// library ArrayLib {\n//     function find(uint[] storage _arr, uint x) internal view returns(uint) {\n//         for (uint i = 0; i < _arr.length; i++) {\n//             if (_arr[i] == x) {\n//                 return i;\n//             }\n//         }\n//         return 10;\n\n//     }\n// }\n\n// contract TestArray {\n//     using ArrayLib for uint[];\n//     uint[] public arr = [1, 3, 2];\n\n//     function findTest() external view returns(uint) {\n//         // return ArrayLib.find(2);\n//         return arr.find(2); // 更推荐\n//     }\n// }\n// 库合约的调用\n\n// contract hashF {\n//     function hash(string memory _text, string memory _otherText) external pure returns(bytes32) {\n//         // return keccak256(abi.encode(_text, _otherText));\n//         return keccak256(abi.encodePacked(_text, _otherText));\n//     }\n// }\n\n/* hash算法 \n1. 输入值相同输出值一定相同 2. 不可逆\nabi.encodePacked 结果不补0 \"AAA\" \"BBB\" 和 \"AA\" \"ABBB\" 结果相同，可能会有不同的输入值相同的hasn值，可以在两个打包的字符串之间加上一个隔断符号\nabi.encode 结果补0\n\n*/ \n\n\n// contract VerfySig {\n//     function verify(address _signer, string memory _message, bytes memory _sig)\n//         external pure returns(bool) \n//     {\n//         bytes32 messageHash = getMessageHash(_message);\n//         bytes32 ethSignMessageHash = getEthSigndMessageHash(messageHash);\n//         return recover(ethSignMessageHash, _sig) == _signer;\n//     }\n\n//     function getMessageHash(string memory _message) public pure returns(bytes32) {\n//         return keccak256(abi.encodePacked(_message));\n//     }\n//     function getEthSigndMessageHash(bytes32 _message) public pure returns(bytes32) {\n//         return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", _message));\n//     }\n//     function recover(bytes32 _ethSignedMessageHash, bytes memory _sig) public pure returns(address) {\n//         (bytes32 r, bytes32 s, uint8 v) = _split(_sig);\n//         return ecrecover(_ethSignedMessageHash, v, r, s);\n//     }\n\n//     function _split(bytes memory _sig) internal pure returns(bytes32 r, bytes32 s, uint8 v) {\n//         require(_sig.length == 65, \"invalid signature length\");\n//         assembly {\n//             r := mload(add(_sig, 32))\n//             s := mload(add(_sig, 64))\n//             v := byte(0, mload(add(_sig, 96)))\n//         }\n//     }\n// }\n/*\nChrome Metamask \nethereum.enable()\naccount = \"0xc4cb0f670dfdc7c28f49f63feaacb2e10bafdec7\"\nhash = \"0x9c97d796ed69b7e69790ae723f51163056db3d55a7a6a82065780460162d4812\"\nethereum.request({method: \"personal_sign\", params: [account, hash]})\n*/\n\n// contract Kill {\n//     constructor() payable {}\n//     function kill() external {\n//         selfdestruct(payable(msg.sender));\n//     }\n//     function test() external pure returns(uint) {\n//         return 123;\n//     }\n// }\n\n// 1 删除合约 2 强制发送主币到一个地址，为什么说强制，即使接受合约没有接受主币的回退函数都可以接受\n\n// interface IERC721 {\n//     function transferFrom(\n//         address _from,\n//         address _to,\n//         uint _nftId\n//     ) external;\n// }\n\n// contract DutchAuction {\n//     uint private constant DURATION = 7 days;\n\n//     IERC721 public immutable nft;\n//     uint public immutable nftId;\n\n//     address payable public immutable seller;\n//     uint public immutable startingPrice;\n//     uint public immutable startAt;\n//     uint public immutable expiresAt;\n//     uint public immutable discountRate;\n\n//     constructor(\n//         uint _startingPrice,\n//         uint _discountRate,\n//         address _nft,\n//         uint _nftId\n//     ) {\n//         seller = payable(msg.sender);\n//         startingPrice = _startingPrice;\n//         startAt = block.timestamp;\n//         expiresAt = block.timestamp + DURATION;\n//         discountRate = _discountRate;\n\n//         require(_startingPrice >= _discountRate * DURATION, \"starting price < min\");\n\n//         nft = IERC721(_nft);\n//         nftId = _nftId;\n//     }\n\n//     function getPrice() public view returns (uint) {\n//         uint timeElapsed = block.timestamp - startAt;\n//         uint discount = discountRate * timeElapsed;\n//         return startingPrice - discount;\n//     }\n\n//     function buy() external payable {\n//         require(block.timestamp < expiresAt, \"auction expired\");\n\n//         uint price = getPrice();\n//         require(msg.value >= price, \"ETH < price\");\n\n//         nft.transferFrom(seller, msg.sender, nftId);\n//         uint refund = msg.value - price;\n//         if (refund > 0) {\n//             payable(msg.sender).transfer(refund);\n//         }\n//         selfdestruct(seller);\n//     }\n// }\n\n// 荷兰拍卖\n\n// contract TestMultiCall {\n//     function func1() external view returns(uint, uint) {\n//         return (1, block.timestamp);\n//     }\n//     function func2() external view returns(uint, uint) {\n//         return (2, block.timestamp);\n//     }\n\n//     function getData1() external pure returns (bytes memory) {\n//         return abi.encodeWithSelector(this.func1.selector);\n//     }\n//     function getData2() external pure returns (bytes memory) {\n//         return abi.encodeWithSelector(this.func2.selector);\n//     }\n// }\n\n// contract MultiCall {\n//     function multiCall(address[] calldata targets, bytes[] calldata data) external view returns(bytes[] memory) {\n//         require(targets.length == data.length, \"target length != data length\");\n//         bytes[] memory results = new bytes[](data.length);\n//         for (uint i = 0; i < targets.length; i++) {\n//             (bool success, bytes memory result) = targets[i].staticcall(data[i]);\n//             require(success, \"call faild\");\n//             results[i] = result;\n//         }\n//         return results;\n//     }\n// }\n\n// 静态调用\n// rpc节点限制每个客户端调用频率，合约的调用打包成一起一次性调用"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"HelloWord.sol": {
				"EthReceiver": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gas",
									"type": "uint256"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HelloWord.sol\":15887:16031  contract EthReceiver {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"HelloWord.sol\":15887:16031  contract EthReceiver {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"HelloWord.sol\":15996:16021  Log(msg.value, gasleft()) */\n      0xbd0faddf87043dd749c1b9d4dca8a12589b8cb5e2106832111ce23f219b14367\n        /* \"HelloWord.sol\":16000:16009  msg.value */\n      callvalue\n        /* \"HelloWord.sol\":16011:16020  gasleft() */\n      gas\n        /* \"HelloWord.sol\":15996:16021  Log(msg.value, gasleft()) */\n      mload(0x40)\n      tag_5\n      swap3\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"HelloWord.sol\":15887:16031  contract EthReceiver {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"#utility.yul\":7:125   */\n    tag_8:\n        /* \"#utility.yul\":94:118   */\n      tag_10\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:463   */\n    tag_6:\n        /* \"#utility.yul\":252:256   */\n      0x00\n        /* \"#utility.yul\":290:292   */\n      0x40\n        /* \"#utility.yul\":279:288   */\n      dup3\n        /* \"#utility.yul\":275:293   */\n      add\n        /* \"#utility.yul\":267:293   */\n      swap1\n      pop\n        /* \"#utility.yul\":303:374   */\n      tag_13\n        /* \"#utility.yul\":371:372   */\n      0x00\n        /* \"#utility.yul\":360:369   */\n      dup4\n        /* \"#utility.yul\":356:373   */\n      add\n        /* \"#utility.yul\":347:353   */\n      dup6\n        /* \"#utility.yul\":303:374   */\n      tag_8\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":384:456   */\n      tag_14\n        /* \"#utility.yul\":452:454   */\n      0x20\n        /* \"#utility.yul\":441:450   */\n      dup4\n        /* \"#utility.yul\":437:455   */\n      add\n        /* \"#utility.yul\":428:434   */\n      dup5\n        /* \"#utility.yul\":384:456   */\n      tag_8\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":131:463   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":469:546   */\n    tag_11:\n        /* \"#utility.yul\":506:513   */\n      0x00\n        /* \"#utility.yul\":535:540   */\n      dup2\n        /* \"#utility.yul\":524:540   */\n      swap1\n      pop\n        /* \"#utility.yul\":469:546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205a28ed323ed092d8b3050642fa6a7a4ccdc0b5f686c2d6a0245b6afe5f38a9c164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060b88061001f6000396000f3fe6080604052366041577fbd0faddf87043dd749c1b9d4dca8a12589b8cb5e2106832111ce23f219b14367345a60405160379291906053565b60405180910390a1005b600080fd5b604d816078565b82525050565b6000604082019050606660008301856046565b607160208301846046565b9392505050565b600081905091905056fea26469706673582212205a28ed323ed092d8b3050642fa6a7a4ccdc0b5f686c2d6a0245b6afe5f38a9c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB8 DUP1 PUSH2 0x1F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x41 JUMPI PUSH32 0xBD0FADDF87043DD749C1B9D4DCA8A12589B8CB5E2106832111CE23F219B14367 CALLVALUE GAS PUSH1 0x40 MLOAD PUSH1 0x37 SWAP3 SWAP2 SWAP1 PUSH1 0x53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4D DUP2 PUSH1 0x78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x66 PUSH1 0x0 DUP4 ADD DUP6 PUSH1 0x46 JUMP JUMPDEST PUSH1 0x71 PUSH1 0x20 DUP4 ADD DUP5 PUSH1 0x46 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0x28 0xED ORIGIN RETURNDATACOPY 0xD0 SWAP3 0xD8 0xB3 SDIV MOD TIMESTAMP STATICCALL PUSH11 0x7A4CCDC0B5F686C2D6A024 JUMPDEST PUSH11 0xFE5F38A9C164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "15887:144:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_56": {
									"entryPoint": null,
									"id": 56,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 70,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 83,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:549:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "257:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "267:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "279:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "290:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "267:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "347:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "360:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "371:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "356:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "356:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "303:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "303:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "303:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "428:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "441:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "452:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "437:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "437:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "384:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "384:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "384:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "221:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "233:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "241:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "252:4:1",
														"type": ""
													}
												],
												"src": "131:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "514:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "524:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "535:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "524:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "496:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "506:7:1",
														"type": ""
													}
												],
												"src": "469:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052366041577fbd0faddf87043dd749c1b9d4dca8a12589b8cb5e2106832111ce23f219b14367345a60405160379291906053565b60405180910390a1005b600080fd5b604d816078565b82525050565b6000604082019050606660008301856046565b607160208301846046565b9392505050565b600081905091905056fea26469706673582212205a28ed323ed092d8b3050642fa6a7a4ccdc0b5f686c2d6a0245b6afe5f38a9c164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH1 0x41 JUMPI PUSH32 0xBD0FADDF87043DD749C1B9D4DCA8A12589B8CB5E2106832111CE23F219B14367 CALLVALUE GAS PUSH1 0x40 MLOAD PUSH1 0x37 SWAP3 SWAP2 SWAP1 PUSH1 0x53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4D DUP2 PUSH1 0x78 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x66 PUSH1 0x0 DUP4 ADD DUP6 PUSH1 0x46 JUMP JUMPDEST PUSH1 0x71 PUSH1 0x20 DUP4 ADD DUP5 PUSH1 0x46 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0x28 0xED ORIGIN RETURNDATACOPY 0xD0 SWAP3 0xD8 0xB3 SDIV MOD TIMESTAMP STATICCALL PUSH11 0x7A4CCDC0B5F686C2D6A024 JUMPDEST PUSH11 0xFE5F38A9C164736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "15887:144:0:-:0;;;;;;15996:25;16000:9;16011;15996:25;;;;;;;:::i;:::-;;;;;;;;15887:144;;;;;7:118:1;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:332::-;252:4;290:2;279:9;275:18;267:26;;303:71;371:1;360:9;356:17;347:6;303:71;:::i;:::-;384:72;452:2;441:9;437:18;428:6;384:72;:::i;:::-;131:332;;;;;:::o;469:77::-;506:7;535:5;524:16;;469:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "36800",
								"executionCost": "87",
								"totalCost": "36887"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 15887,
									"end": 16031,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 15887,
									"end": 16031,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205a28ed323ed092d8b3050642fa6a7a4ccdc0b5f686c2d6a0245b6afe5f38a9c164736f6c63430008070033",
									".code": [
										{
											"begin": 15887,
											"end": 16031,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "PUSH",
											"source": 0,
											"value": "BD0FADDF87043DD749C1B9D4DCA8A12589B8CB5E2106832111CE23F219B14367"
										},
										{
											"begin": 16000,
											"end": 16009,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16011,
											"end": 16020,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15996,
											"end": 16021,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15887,
											"end": 16031,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 463,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 131,
											"end": 463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 256,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 290,
											"end": 292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 279,
											"end": 288,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 275,
											"end": 293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 267,
											"end": 293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 267,
											"end": 293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 303,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 360,
											"end": 369,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 356,
											"end": 373,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 347,
											"end": 353,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 303,
											"end": 374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 303,
											"end": 374,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 374,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 303,
											"end": 374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 452,
											"end": 454,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 441,
											"end": 450,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 437,
											"end": 455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 428,
											"end": 434,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 384,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 384,
											"end": 456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 463,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 131,
											"end": 463,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 463,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 463,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 469,
											"end": 546,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 469,
											"end": 546,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 506,
											"end": 513,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 535,
											"end": 540,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 524,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 524,
											"end": 540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 469,
											"end": 546,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 469,
											"end": 546,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 469,
											"end": 546,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 469,
											"end": 546,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gas\",\"type\":\"uint256\"}],\"name\":\"Log\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HelloWord.sol\":\"EthReceiver\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HelloWord.sol\":{\"keccak256\":\"0x866cd8c9f6fe8f1ae4c76bb0b911a474eefe08e28675c00cdaf316742bbba510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fe02de2e4db45686b2e63221c635692d236546d6c375a0403faa2f7a50e9dad\",\"dweb:/ipfs/QmYmZN9vCFNTxsvvhFhC9a4GXpRyrb9181vRyumirPhcDe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Fallback": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "func",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "Log",
							"type": "event"
						},
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"HelloWord.sol\":14310:14598  contract Fallback {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"HelloWord.sol\":14310:14598  contract Fallback {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_2, calldatasize)\n        /* \"HelloWord.sol\":14547:14588  Log(\"receive\", msg.sender, msg.value, \"\") */\n      0xf7f75251dee7d7fc22deac3247729ebe7c86541f35930bf10c2a4207479a3b6c\n        /* \"HelloWord.sol\":14562:14572  msg.sender */\n      caller\n        /* \"HelloWord.sol\":14574:14583  msg.value */\n      callvalue\n        /* \"HelloWord.sol\":14547:14588  Log(\"receive\", msg.sender, msg.value, \"\") */\n      mload(0x40)\n      tag_5\n      swap3\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"HelloWord.sol\":14310:14598  contract Fallback {... */\n      stop\n    tag_2:\n        /* \"HelloWord.sol\":14445:14493  Log(\"fallback\", msg.sender, msg.value, msg.data) */\n      0xf7f75251dee7d7fc22deac3247729ebe7c86541f35930bf10c2a4207479a3b6c\n        /* \"HelloWord.sol\":14461:14471  msg.sender */\n      caller\n        /* \"HelloWord.sol\":14473:14482  msg.value */\n      callvalue\n        /* \"HelloWord.sol\":14484:14492  msg.data */\n      0x00\n      calldatasize\n        /* \"HelloWord.sol\":14445:14493  Log(\"fallback\", msg.sender, msg.value, msg.data) */\n      mload(0x40)\n      tag_9\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"HelloWord.sol\":14310:14598  contract Fallback {... */\n      stop\n        /* \"#utility.yul\":7:125   */\n    tag_12:\n        /* \"#utility.yul\":94:118   */\n      tag_14\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_15\n      jump\t// in\n    tag_14:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":153:454   */\n    tag_16:\n        /* \"#utility.yul\":249:252   */\n      0x00\n        /* \"#utility.yul\":270:340   */\n      tag_18\n        /* \"#utility.yul\":333:339   */\n      dup4\n        /* \"#utility.yul\":328:331   */\n      dup6\n        /* \"#utility.yul\":270:340   */\n      tag_19\n      jump\t// in\n    tag_18:\n        /* \"#utility.yul\":263:340   */\n      swap4\n      pop\n        /* \"#utility.yul\":350:393   */\n      tag_20\n        /* \"#utility.yul\":386:392   */\n      dup4\n        /* \"#utility.yul\":381:384   */\n      dup6\n        /* \"#utility.yul\":374:379   */\n      dup5\n        /* \"#utility.yul\":350:393   */\n      tag_21\n      jump\t// in\n    tag_20:\n        /* \"#utility.yul\":418:447   */\n      tag_22\n        /* \"#utility.yul\":440:446   */\n      dup4\n        /* \"#utility.yul\":418:447   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":413:416   */\n      dup5\n        /* \"#utility.yul\":409:448   */\n      add\n        /* \"#utility.yul\":402:448   */\n      swap1\n      pop\n        /* \"#utility.yul\":153:454   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":460:825   */\n    tag_24:\n        /* \"#utility.yul\":602:605   */\n      0x00\n        /* \"#utility.yul\":623:689   */\n      tag_26\n        /* \"#utility.yul\":687:688   */\n      0x08\n        /* \"#utility.yul\":682:685   */\n      dup4\n        /* \"#utility.yul\":623:689   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":616:689   */\n      swap2\n      pop\n        /* \"#utility.yul\":698:791   */\n      tag_28\n        /* \"#utility.yul\":787:790   */\n      dup3\n        /* \"#utility.yul\":698:791   */\n      tag_29\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":816:818   */\n      0x20\n        /* \"#utility.yul\":811:814   */\n      dup3\n        /* \"#utility.yul\":807:819   */\n      add\n        /* \"#utility.yul\":800:819   */\n      swap1\n      pop\n        /* \"#utility.yul\":460:825   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":831:1193   */\n    tag_30:\n        /* \"#utility.yul\":972:975   */\n      0x00\n        /* \"#utility.yul\":993:1058   */\n      tag_32\n        /* \"#utility.yul\":1056:1057   */\n      0x00\n        /* \"#utility.yul\":1051:1054   */\n      dup4\n        /* \"#utility.yul\":993:1058   */\n      tag_19\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":986:1058   */\n      swap2\n      pop\n        /* \"#utility.yul\":1067:1160   */\n      tag_33\n        /* \"#utility.yul\":1156:1159   */\n      dup3\n        /* \"#utility.yul\":1067:1160   */\n      tag_34\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1185:1186   */\n      0x00\n        /* \"#utility.yul\":1180:1183   */\n      dup3\n        /* \"#utility.yul\":1176:1187   */\n      add\n        /* \"#utility.yul\":1169:1187   */\n      swap1\n      pop\n        /* \"#utility.yul\":831:1193   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1199:1564   */\n    tag_35:\n        /* \"#utility.yul\":1341:1344   */\n      0x00\n        /* \"#utility.yul\":1362:1428   */\n      tag_37\n        /* \"#utility.yul\":1426:1427   */\n      0x07\n        /* \"#utility.yul\":1421:1424   */\n      dup4\n        /* \"#utility.yul\":1362:1428   */\n      tag_27\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1355:1428   */\n      swap2\n      pop\n        /* \"#utility.yul\":1437:1530   */\n      tag_38\n        /* \"#utility.yul\":1526:1529   */\n      dup3\n        /* \"#utility.yul\":1437:1530   */\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":1555:1557   */\n      0x20\n        /* \"#utility.yul\":1550:1553   */\n      dup3\n        /* \"#utility.yul\":1546:1558   */\n      add\n        /* \"#utility.yul\":1539:1558   */\n      swap1\n      pop\n        /* \"#utility.yul\":1199:1564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1570:1688   */\n    tag_40:\n        /* \"#utility.yul\":1657:1681   */\n      tag_42\n        /* \"#utility.yul\":1675:1680   */\n      dup2\n        /* \"#utility.yul\":1657:1681   */\n      tag_43\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1652:1655   */\n      dup3\n        /* \"#utility.yul\":1645:1682   */\n      mstore\n        /* \"#utility.yul\":1570:1688   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1694:2551   */\n    tag_10:\n        /* \"#utility.yul\":1972:1976   */\n      0x00\n        /* \"#utility.yul\":2010:2013   */\n      0x80\n        /* \"#utility.yul\":1999:2008   */\n      dup3\n        /* \"#utility.yul\":1995:2014   */\n      add\n        /* \"#utility.yul\":1987:2014   */\n      swap1\n      pop\n        /* \"#utility.yul\":2060:2069   */\n      dup2\n        /* \"#utility.yul\":2054:2058   */\n      dup2\n        /* \"#utility.yul\":2050:2070   */\n      sub\n        /* \"#utility.yul\":2046:2047   */\n      0x00\n        /* \"#utility.yul\":2035:2044   */\n      dup4\n        /* \"#utility.yul\":2031:2048   */\n      add\n        /* \"#utility.yul\":2024:2071   */\n      mstore\n        /* \"#utility.yul\":2088:2219   */\n      tag_45\n        /* \"#utility.yul\":2214:2218   */\n      dup2\n        /* \"#utility.yul\":2088:2219   */\n      tag_24\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":2080:2219   */\n      swap1\n      pop\n        /* \"#utility.yul\":2229:2301   */\n      tag_46\n        /* \"#utility.yul\":2297:2299   */\n      0x20\n        /* \"#utility.yul\":2286:2295   */\n      dup4\n        /* \"#utility.yul\":2282:2300   */\n      add\n        /* \"#utility.yul\":2273:2279   */\n      dup8\n        /* \"#utility.yul\":2229:2301   */\n      tag_12\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":2311:2383   */\n      tag_47\n        /* \"#utility.yul\":2379:2381   */\n      0x40\n        /* \"#utility.yul\":2368:2377   */\n      dup4\n        /* \"#utility.yul\":2364:2382   */\n      add\n        /* \"#utility.yul\":2355:2361   */\n      dup7\n        /* \"#utility.yul\":2311:2383   */\n      tag_40\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":2430:2439   */\n      dup2\n        /* \"#utility.yul\":2424:2428   */\n      dup2\n        /* \"#utility.yul\":2420:2440   */\n      sub\n        /* \"#utility.yul\":2415:2417   */\n      0x60\n        /* \"#utility.yul\":2404:2413   */\n      dup4\n        /* \"#utility.yul\":2400:2418   */\n      add\n        /* \"#utility.yul\":2393:2441   */\n      mstore\n        /* \"#utility.yul\":2458:2544   */\n      tag_48\n        /* \"#utility.yul\":2539:2543   */\n      dup2\n        /* \"#utility.yul\":2530:2536   */\n      dup5\n        /* \"#utility.yul\":2522:2528   */\n      dup7\n        /* \"#utility.yul\":2458:2544   */\n      tag_16\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":2450:2544   */\n      swap1\n      pop\n        /* \"#utility.yul\":1694:2551   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:3502   */\n    tag_6:\n        /* \"#utility.yul\":2879:2883   */\n      0x00\n        /* \"#utility.yul\":2917:2920   */\n      0x80\n        /* \"#utility.yul\":2906:2915   */\n      dup3\n        /* \"#utility.yul\":2902:2921   */\n      add\n        /* \"#utility.yul\":2894:2921   */\n      swap1\n      pop\n        /* \"#utility.yul\":2967:2976   */\n      dup2\n        /* \"#utility.yul\":2961:2965   */\n      dup2\n        /* \"#utility.yul\":2957:2977   */\n      sub\n        /* \"#utility.yul\":2953:2954   */\n      0x00\n        /* \"#utility.yul\":2942:2951   */\n      dup4\n        /* \"#utility.yul\":2938:2955   */\n      add\n        /* \"#utility.yul\":2931:2978   */\n      mstore\n        /* \"#utility.yul\":2995:3126   */\n      tag_50\n        /* \"#utility.yul\":3121:3125   */\n      dup2\n        /* \"#utility.yul\":2995:3126   */\n      tag_35\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":2987:3126   */\n      swap1\n      pop\n        /* \"#utility.yul\":3136:3208   */\n      tag_51\n        /* \"#utility.yul\":3204:3206   */\n      0x20\n        /* \"#utility.yul\":3193:3202   */\n      dup4\n        /* \"#utility.yul\":3189:3207   */\n      add\n        /* \"#utility.yul\":3180:3186   */\n      dup6\n        /* \"#utility.yul\":3136:3208   */\n      tag_12\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":3218:3290   */\n      tag_52\n        /* \"#utility.yul\":3286:3288   */\n      0x40\n        /* \"#utility.yul\":3275:3284   */\n      dup4\n        /* \"#utility.yul\":3271:3289   */\n      add\n        /* \"#utility.yul\":3262:3268   */\n      dup5\n        /* \"#utility.yul\":3218:3290   */\n      tag_40\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":3337:3346   */\n      dup2\n        /* \"#utility.yul\":3331:3335   */\n      dup2\n        /* \"#utility.yul\":3327:3347   */\n      sub\n        /* \"#utility.yul\":3322:3324   */\n      0x60\n        /* \"#utility.yul\":3311:3320   */\n      dup4\n        /* \"#utility.yul\":3307:3325   */\n      add\n        /* \"#utility.yul\":3300:3348   */\n      mstore\n        /* \"#utility.yul\":3365:3495   */\n      tag_53\n        /* \"#utility.yul\":3490:3494   */\n      dup2\n        /* \"#utility.yul\":3365:3495   */\n      tag_30\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":3357:3495   */\n      swap1\n      pop\n        /* \"#utility.yul\":2557:3502   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3508:3676   */\n    tag_19:\n        /* \"#utility.yul\":3591:3602   */\n      0x00\n        /* \"#utility.yul\":3625:3631   */\n      dup3\n        /* \"#utility.yul\":3620:3623   */\n      dup3\n        /* \"#utility.yul\":3613:3632   */\n      mstore\n        /* \"#utility.yul\":3665:3669   */\n      0x20\n        /* \"#utility.yul\":3660:3663   */\n      dup3\n        /* \"#utility.yul\":3656:3670   */\n      add\n        /* \"#utility.yul\":3641:3670   */\n      swap1\n      pop\n        /* \"#utility.yul\":3508:3676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3682:3851   */\n    tag_27:\n        /* \"#utility.yul\":3766:3777   */\n      0x00\n        /* \"#utility.yul\":3800:3806   */\n      dup3\n        /* \"#utility.yul\":3795:3798   */\n      dup3\n        /* \"#utility.yul\":3788:3807   */\n      mstore\n        /* \"#utility.yul\":3840:3844   */\n      0x20\n        /* \"#utility.yul\":3835:3838   */\n      dup3\n        /* \"#utility.yul\":3831:3845   */\n      add\n        /* \"#utility.yul\":3816:3845   */\n      swap1\n      pop\n        /* \"#utility.yul\":3682:3851   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3857:3953   */\n    tag_15:\n        /* \"#utility.yul\":3894:3901   */\n      0x00\n        /* \"#utility.yul\":3923:3947   */\n      tag_57\n        /* \"#utility.yul\":3941:3946   */\n      dup3\n        /* \"#utility.yul\":3923:3947   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":3912:3947   */\n      swap1\n      pop\n        /* \"#utility.yul\":3857:3953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3959:4085   */\n    tag_58:\n        /* \"#utility.yul\":3996:4003   */\n      0x00\n        /* \"#utility.yul\":4036:4078   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4029:4034   */\n      dup3\n        /* \"#utility.yul\":4025:4079   */\n      and\n        /* \"#utility.yul\":4014:4079   */\n      swap1\n      pop\n        /* \"#utility.yul\":3959:4085   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4091:4168   */\n    tag_43:\n        /* \"#utility.yul\":4128:4135   */\n      0x00\n        /* \"#utility.yul\":4157:4162   */\n      dup2\n        /* \"#utility.yul\":4146:4162   */\n      swap1\n      pop\n        /* \"#utility.yul\":4091:4168   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4174:4328   */\n    tag_21:\n        /* \"#utility.yul\":4258:4264   */\n      dup3\n        /* \"#utility.yul\":4253:4256   */\n      dup2\n        /* \"#utility.yul\":4248:4251   */\n      dup4\n        /* \"#utility.yul\":4235:4265   */\n      calldatacopy\n        /* \"#utility.yul\":4320:4321   */\n      0x00\n        /* \"#utility.yul\":4311:4317   */\n      dup4\n        /* \"#utility.yul\":4306:4309   */\n      dup4\n        /* \"#utility.yul\":4302:4318   */\n      add\n        /* \"#utility.yul\":4295:4322   */\n      mstore\n        /* \"#utility.yul\":4174:4328   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4334:4436   */\n    tag_23:\n        /* \"#utility.yul\":4375:4381   */\n      0x00\n        /* \"#utility.yul\":4426:4428   */\n      0x1f\n        /* \"#utility.yul\":4422:4429   */\n      not\n        /* \"#utility.yul\":4417:4419   */\n      0x1f\n        /* \"#utility.yul\":4410:4415   */\n      dup4\n        /* \"#utility.yul\":4406:4420   */\n      add\n        /* \"#utility.yul\":4402:4430   */\n      and\n        /* \"#utility.yul\":4392:4430   */\n      swap1\n      pop\n        /* \"#utility.yul\":4334:4436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4442:4600   */\n    tag_29:\n        /* \"#utility.yul\":4582:4592   */\n      0x66616c6c6261636b000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4578:4579   */\n      0x00\n        /* \"#utility.yul\":4570:4576   */\n      dup3\n        /* \"#utility.yul\":4566:4580   */\n      add\n        /* \"#utility.yul\":4559:4593   */\n      mstore\n        /* \"#utility.yul\":4442:4600   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4606:4720   */\n    tag_34:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4726:4883   */\n    tag_39:\n        /* \"#utility.yul\":4866:4875   */\n      0x7265636569766500000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":4862:4863   */\n      0x00\n        /* \"#utility.yul\":4854:4860   */\n      dup3\n        /* \"#utility.yul\":4850:4864   */\n      add\n        /* \"#utility.yul\":4843:4876   */\n      mstore\n        /* \"#utility.yul\":4726:4883   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ca367d23b7fd076c00f13c65a3e11dc6ffc82e5a31a4d8eb68ced4a2d83610fd64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506102e3806100206000396000f3fe608060405236610044577ff7f75251dee7d7fc22deac3247729ebe7c86541f35930bf10c2a4207479a3b6c333460405161003a92919061018b565b60405180910390a1005b7ff7f75251dee7d7fc22deac3247729ebe7c86541f35930bf10c2a4207479a3b6c333460003660405161007a9493929190610138565b60405180910390a1005b61008d816101fc565b82525050565b600061009f83856101da565b93506100ac838584610238565b6100b583610247565b840190509392505050565b60006100cd6008836101eb565b91506100d882610258565b602082019050919050565b60006100f06000836101da565b91506100fb82610281565b600082019050919050565b60006101136007836101eb565b915061011e82610284565b602082019050919050565b6101328161022e565b82525050565b60006080820190508181036000830152610151816100c0565b90506101606020830187610084565b61016d6040830186610129565b8181036060830152610180818486610093565b905095945050505050565b600060808201905081810360008301526101a481610106565b90506101b36020830185610084565b6101c06040830184610129565b81810360608301526101d1816100e3565b90509392505050565b600082825260208201905092915050565b600082825260208201905092915050565b60006102078261020e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b7f66616c6c6261636b000000000000000000000000000000000000000000000000600082015250565b50565b7f726563656976650000000000000000000000000000000000000000000000000060008201525056fea2646970667358221220ca367d23b7fd076c00f13c65a3e11dc6ffc82e5a31a4d8eb68ced4a2d83610fd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E3 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x44 JUMPI PUSH32 0xF7F75251DEE7D7FC22DEAC3247729EBE7C86541F35930BF10C2A4207479A3B6C CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x3A SWAP3 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH32 0xF7F75251DEE7D7FC22DEAC3247729EBE7C86541F35930BF10C2A4207479A3B6C CALLER CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x7A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH2 0x8D DUP2 PUSH2 0x1FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F DUP4 DUP6 PUSH2 0x1DA JUMP JUMPDEST SWAP4 POP PUSH2 0xAC DUP4 DUP6 DUP5 PUSH2 0x238 JUMP JUMPDEST PUSH2 0xB5 DUP4 PUSH2 0x247 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD PUSH1 0x8 DUP4 PUSH2 0x1EB JUMP JUMPDEST SWAP2 POP PUSH2 0xD8 DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0 PUSH1 0x0 DUP4 PUSH2 0x1DA JUMP JUMPDEST SWAP2 POP PUSH2 0xFB DUP3 PUSH2 0x281 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113 PUSH1 0x7 DUP4 PUSH2 0x1EB JUMP JUMPDEST SWAP2 POP PUSH2 0x11E DUP3 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132 DUP2 PUSH2 0x22E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151 DUP2 PUSH2 0xC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x160 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x84 JUMP JUMPDEST PUSH2 0x16D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x129 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x180 DUP2 DUP5 DUP7 PUSH2 0x93 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4 DUP2 PUSH2 0x106 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x84 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x129 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D1 DUP2 PUSH2 0xE3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207 DUP3 PUSH2 0x20E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x7265636569766500000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA CALLDATASIZE PUSH30 0x23B7FD076C00F13C65A3E11DC6FFC82E5A31A4D8EB68CED4A2D83610FD64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "14310:288:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_38": {
									"entryPoint": null,
									"id": 38,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 147,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 192,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_t_address_t_uint256_t_bytes_calldata_ptr__to_t_string_memory_ptr_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 312,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 491,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 558,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470": {
									"entryPoint": 641,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b": {
									"entryPoint": 644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:4886:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "253:201:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "263:77:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "328:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "333:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "270:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "270:70:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "374:5:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "381:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "386:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "350:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "350:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "350:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "402:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "413:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "440:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "418:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "409:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "409:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "402:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "226:5:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "233:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "241:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "249:3:1",
														"type": ""
													}
												],
												"src": "153:301:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "606:219:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "616:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "682:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "687:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "623:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "623:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "616:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "787:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010",
																	"nodeType": "YulIdentifier",
																	"src": "698:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "698:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "698:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "800:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "811:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "816:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "807:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "807:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "800:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "602:3:1",
														"type": ""
													}
												],
												"src": "460:365:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "976:217:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "986:72:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1051:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1056:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "993:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "993:65:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1156:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"nodeType": "YulIdentifier",
																	"src": "1067:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1067:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1067:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1169:18:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1180:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1185:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1176:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1176:11:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1169:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "964:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "972:3:1",
														"type": ""
													}
												],
												"src": "831:362:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1345:219:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1355:73:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1421:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:1",
																		"type": "",
																		"value": "7"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1362:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:66:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1526:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b",
																	"nodeType": "YulIdentifier",
																	"src": "1437:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1437:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1539:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1550:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1555:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1539:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1333:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1341:3:1",
														"type": ""
													}
												],
												"src": "1199:365:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1635:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1652:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1675:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1657:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1657:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1645:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1645:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1645:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1623:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1630:3:1",
														"type": ""
													}
												],
												"src": "1570:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1977:574:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1987:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1999:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2010:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1995:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1995:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1987:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2035:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2046:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2031:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2054:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2060:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2050:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2050:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2024:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2024:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2080:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2214:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2088:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2080:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2273:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2286:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2297:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2282:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2282:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2229:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2229:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2229:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2355:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2368:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2379:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2364:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2311:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2311:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2311:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2415:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2400:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2424:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2430:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2420:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2393:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2393:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2393:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2450:94:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2522:6:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "2530:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2539:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2458:63:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2458:86:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2450:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_t_address_t_uint256_t_bytes_calldata_ptr__to_t_string_memory_ptr_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1925:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1937:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1945:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1953:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1961:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1972:4:1",
														"type": ""
													}
												],
												"src": "1694:857:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2884:618:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2894:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2906:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2917:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2902:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2902:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2894:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2942:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2953:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2938:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2938:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2961:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2967:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2957:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2931:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2931:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2931:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2987:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3121:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2995:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2995:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2987:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3180:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3204:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3189:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3136:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3136:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3136:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3262:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3275:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3286:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3271:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3271:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3218:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3218:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3311:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3322:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3307:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3307:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3331:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3337:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3327:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3327:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3300:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3300:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3300:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3357:138:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3490:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3365:123:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3365:130:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3357:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2848:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2860:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2868:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2879:4:1",
														"type": ""
													}
												],
												"src": "2557:945:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3620:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3625:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3613:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3641:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3660:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3665:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3656:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3656:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3641:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3575:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3580:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3591:11:1",
														"type": ""
													}
												],
												"src": "3508:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3778:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3795:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3800:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3788:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3788:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3816:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3835:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3840:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3831:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3831:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "3816:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3750:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3755:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "3766:11:1",
														"type": ""
													}
												],
												"src": "3682:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3902:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3912:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3941:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3923:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3923:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3912:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3884:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3894:7:1",
														"type": ""
													}
												],
												"src": "3857:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4004:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4014:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4029:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4036:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4014:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3986:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3996:7:1",
														"type": ""
													}
												],
												"src": "3959:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4136:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4146:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4157:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4146:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4118:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4128:7:1",
														"type": ""
													}
												],
												"src": "4091:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4225:103:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4253:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4258:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "4235:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4235:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4235:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "4306:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4311:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4302:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4302:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4295:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4295:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4295:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "4207:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "4212:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4217:6:1",
														"type": ""
													}
												],
												"src": "4174:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4382:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4392:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4410:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4417:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4406:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4406:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4426:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4422:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4422:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4402:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4402:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4392:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4365:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4375:6:1",
														"type": ""
													}
												],
												"src": "4334:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4548:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4570:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4578:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4566:14:1"
																	},
																	{
																		"hexValue": "66616c6c6261636b",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4582:10:1",
																		"type": "",
																		"value": "fallback"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4559:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4559:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4559:34:1"
														}
													]
												},
												"name": "store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4540:6:1",
														"type": ""
													}
												],
												"src": "4442:158:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4712:8:1",
													"statements": []
												},
												"name": "store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4704:6:1",
														"type": ""
													}
												],
												"src": "4606:114:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4832:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4854:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4862:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4850:14:1"
																	},
																	{
																		"hexValue": "72656365697665",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4866:9:1",
																		"type": "",
																		"value": "receive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4843:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4843:33:1"
														}
													]
												},
												"name": "store_literal_in_memory_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4824:6:1",
														"type": ""
													}
												],
												"src": "4726:157:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(start, length, pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n\n        copy_calldata_to_memory(start, pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 8)\n        store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 7)\n        store_literal_in_memory_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_t_address_t_uint256_t_bytes_calldata_ptr__to_t_string_memory_ptr_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_calldata_ptr_to_t_bytes_memory_ptr_fromStack(value2, value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b_t_address_t_uint256_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_string_memory_ptr_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010(memPtr) {\n\n        mstore(add(memPtr, 0), \"fallback\")\n\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function store_literal_in_memory_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b(memPtr) {\n\n        mstore(add(memPtr, 0), \"receive\")\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405236610044577ff7f75251dee7d7fc22deac3247729ebe7c86541f35930bf10c2a4207479a3b6c333460405161003a92919061018b565b60405180910390a1005b7ff7f75251dee7d7fc22deac3247729ebe7c86541f35930bf10c2a4207479a3b6c333460003660405161007a9493929190610138565b60405180910390a1005b61008d816101fc565b82525050565b600061009f83856101da565b93506100ac838584610238565b6100b583610247565b840190509392505050565b60006100cd6008836101eb565b91506100d882610258565b602082019050919050565b60006100f06000836101da565b91506100fb82610281565b600082019050919050565b60006101136007836101eb565b915061011e82610284565b602082019050919050565b6101328161022e565b82525050565b60006080820190508181036000830152610151816100c0565b90506101606020830187610084565b61016d6040830186610129565b8181036060830152610180818486610093565b905095945050505050565b600060808201905081810360008301526101a481610106565b90506101b36020830185610084565b6101c06040830184610129565b81810360608301526101d1816100e3565b90509392505050565b600082825260208201905092915050565b600082825260208201905092915050565b60006102078261020e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b6000601f19601f8301169050919050565b7f66616c6c6261636b000000000000000000000000000000000000000000000000600082015250565b50565b7f726563656976650000000000000000000000000000000000000000000000000060008201525056fea2646970667358221220ca367d23b7fd076c00f13c65a3e11dc6ffc82e5a31a4d8eb68ced4a2d83610fd64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLDATASIZE PUSH2 0x44 JUMPI PUSH32 0xF7F75251DEE7D7FC22DEAC3247729EBE7C86541F35930BF10C2A4207479A3B6C CALLER CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x3A SWAP3 SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH32 0xF7F75251DEE7D7FC22DEAC3247729EBE7C86541F35930BF10C2A4207479A3B6C CALLER CALLVALUE PUSH1 0x0 CALLDATASIZE PUSH1 0x40 MLOAD PUSH2 0x7A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x138 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH2 0x8D DUP2 PUSH2 0x1FC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x9F DUP4 DUP6 PUSH2 0x1DA JUMP JUMPDEST SWAP4 POP PUSH2 0xAC DUP4 DUP6 DUP5 PUSH2 0x238 JUMP JUMPDEST PUSH2 0xB5 DUP4 PUSH2 0x247 JUMP JUMPDEST DUP5 ADD SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCD PUSH1 0x8 DUP4 PUSH2 0x1EB JUMP JUMPDEST SWAP2 POP PUSH2 0xD8 DUP3 PUSH2 0x258 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF0 PUSH1 0x0 DUP4 PUSH2 0x1DA JUMP JUMPDEST SWAP2 POP PUSH2 0xFB DUP3 PUSH2 0x281 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x113 PUSH1 0x7 DUP4 PUSH2 0x1EB JUMP JUMPDEST SWAP2 POP PUSH2 0x11E DUP3 PUSH2 0x284 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132 DUP2 PUSH2 0x22E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x151 DUP2 PUSH2 0xC0 JUMP JUMPDEST SWAP1 POP PUSH2 0x160 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x84 JUMP JUMPDEST PUSH2 0x16D PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x129 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x180 DUP2 DUP5 DUP7 PUSH2 0x93 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A4 DUP2 PUSH2 0x106 JUMP JUMPDEST SWAP1 POP PUSH2 0x1B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x84 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x129 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1D1 DUP2 PUSH2 0xE3 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x207 DUP3 PUSH2 0x20E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x66616C6C6261636B000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH32 0x7265636569766500000000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCA CALLDATASIZE PUSH30 0x23B7FD076C00F13C65A3E11DC6FFC82E5A31A4D8EB68CED4A2D83610FD64 PUSH20 0x6F6C634300080700330000000000000000000000 ",
							"sourceMap": "14310:288:0:-:0;;;;;;14547:41;14562:10;14574:9;14547:41;;;;;;;:::i;:::-;;;;;;;;14310:288;;14445:48;14461:10;14473:9;14484:8;;14445:48;;;;;;;;;:::i;:::-;;;;;;;;14310:288;7:118:1;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;153:301::-;249:3;270:70;333:6;328:3;270:70;:::i;:::-;263:77;;350:43;386:6;381:3;374:5;350:43;:::i;:::-;418:29;440:6;418:29;:::i;:::-;413:3;409:39;402:46;;153:301;;;;;:::o;460:365::-;602:3;623:66;687:1;682:3;623:66;:::i;:::-;616:73;;698:93;787:3;698:93;:::i;:::-;816:2;811:3;807:12;800:19;;460:365;;;:::o;831:362::-;972:3;993:65;1056:1;1051:3;993:65;:::i;:::-;986:72;;1067:93;1156:3;1067:93;:::i;:::-;1185:1;1180:3;1176:11;1169:18;;831:362;;;:::o;1199:365::-;1341:3;1362:66;1426:1;1421:3;1362:66;:::i;:::-;1355:73;;1437:93;1526:3;1437:93;:::i;:::-;1555:2;1550:3;1546:12;1539:19;;1199:365;;;:::o;1570:118::-;1657:24;1675:5;1657:24;:::i;:::-;1652:3;1645:37;1570:118;;:::o;1694:857::-;1972:4;2010:3;1999:9;1995:19;1987:27;;2060:9;2054:4;2050:20;2046:1;2035:9;2031:17;2024:47;2088:131;2214:4;2088:131;:::i;:::-;2080:139;;2229:72;2297:2;2286:9;2282:18;2273:6;2229:72;:::i;:::-;2311;2379:2;2368:9;2364:18;2355:6;2311:72;:::i;:::-;2430:9;2424:4;2420:20;2415:2;2404:9;2400:18;2393:48;2458:86;2539:4;2530:6;2522;2458:86;:::i;:::-;2450:94;;1694:857;;;;;;;:::o;2557:945::-;2879:4;2917:3;2906:9;2902:19;2894:27;;2967:9;2961:4;2957:20;2953:1;2942:9;2938:17;2931:47;2995:131;3121:4;2995:131;:::i;:::-;2987:139;;3136:72;3204:2;3193:9;3189:18;3180:6;3136:72;:::i;:::-;3218;3286:2;3275:9;3271:18;3262:6;3218:72;:::i;:::-;3337:9;3331:4;3327:20;3322:2;3311:9;3307:18;3300:48;3365:130;3490:4;3365:130;:::i;:::-;3357:138;;2557:945;;;;;:::o;3508:168::-;3591:11;3625:6;3620:3;3613:19;3665:4;3660:3;3656:14;3641:29;;3508:168;;;;:::o;3682:169::-;3766:11;3800:6;3795:3;3788:19;3840:4;3835:3;3831:14;3816:29;;3682:169;;;;:::o;3857:96::-;3894:7;3923:24;3941:5;3923:24;:::i;:::-;3912:35;;3857:96;;;:::o;3959:126::-;3996:7;4036:42;4029:5;4025:54;4014:65;;3959:126;;;:::o;4091:77::-;4128:7;4157:5;4146:16;;4091:77;;;:::o;4174:154::-;4258:6;4253:3;4248;4235:30;4320:1;4311:6;4306:3;4302:16;4295:27;4174:154;;;:::o;4334:102::-;4375:6;4426:2;4422:7;4417:2;4410:5;4406:14;4402:28;4392:38;;4334:102;;;:::o;4442:158::-;4582:10;4578:1;4570:6;4566:14;4559:34;4442:158;:::o;4606:114::-;;:::o;4726:157::-;4866:9;4862:1;4854:6;4850:14;4843:33;4726:157;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "147800",
								"executionCost": "196",
								"totalCost": "147996"
							},
							"external": {
								"": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14310,
									"end": 14598,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14310,
									"end": 14598,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ca367d23b7fd076c00f13c65a3e11dc6ffc82e5a31a4d8eb68ced4a2d83610fd64736f6c63430008070033",
									".code": [
										{
											"begin": 14310,
											"end": 14598,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "F7F75251DEE7D7FC22DEAC3247729EBE7C86541F35930BF10C2A4207479A3B6C"
										},
										{
											"begin": 14562,
											"end": 14572,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14574,
											"end": 14583,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14547,
											"end": 14588,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "PUSH",
											"source": 0,
											"value": "F7F75251DEE7D7FC22DEAC3247729EBE7C86541F35930BF10C2A4207479A3B6C"
										},
										{
											"begin": 14461,
											"end": 14471,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14473,
											"end": 14482,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 14484,
											"end": 14492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14484,
											"end": 14492,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14445,
											"end": 14493,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 14310,
											"end": 14598,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 153,
											"end": 454,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 153,
											"end": 454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 249,
											"end": 252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 270,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 333,
											"end": 339,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 331,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 270,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 270,
											"end": 340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 270,
											"end": 340,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 270,
											"end": 340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 263,
											"end": 340,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 263,
											"end": 340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 350,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 386,
											"end": 392,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 381,
											"end": 384,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 374,
											"end": 379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 350,
											"end": 393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 350,
											"end": 393,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 350,
											"end": 393,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 350,
											"end": 393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 440,
											"end": 446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 418,
											"end": 447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 418,
											"end": 447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 413,
											"end": 416,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 409,
											"end": 448,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 448,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 402,
											"end": 448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 454,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 153,
											"end": 454,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 153,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 153,
											"end": 454,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 460,
											"end": 825,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 460,
											"end": 825,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 605,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 623,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 687,
											"end": 688,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 682,
											"end": 685,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 623,
											"end": 689,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 623,
											"end": 689,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 623,
											"end": 689,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 623,
											"end": 689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 689,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 689,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 698,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 787,
											"end": 790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 698,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 698,
											"end": 791,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 698,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 818,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 811,
											"end": 814,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 807,
											"end": 819,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 800,
											"end": 819,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 800,
											"end": 819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 460,
											"end": 825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 460,
											"end": 825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 460,
											"end": 825,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 831,
											"end": 1193,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 831,
											"end": 1193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 972,
											"end": 975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1056,
											"end": 1057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1051,
											"end": 1054,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 993,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 986,
											"end": 1058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1156,
											"end": 1159,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1067,
											"end": 1160,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1067,
											"end": 1160,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1067,
											"end": 1160,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1067,
											"end": 1160,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1176,
											"end": 1187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1169,
											"end": 1187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 1193,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 831,
											"end": 1193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 831,
											"end": 1193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 831,
											"end": 1193,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1199,
											"end": 1564,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1199,
											"end": 1564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1362,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1421,
											"end": 1424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1362,
											"end": 1428,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1362,
											"end": 1428,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1362,
											"end": 1428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1428,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1355,
											"end": 1428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1526,
											"end": 1529,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1437,
											"end": 1530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1437,
											"end": 1530,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1437,
											"end": 1530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 1557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1553,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1564,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1564,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1564,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1199,
											"end": 1564,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1570,
											"end": 1688,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1675,
											"end": 1680,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1657,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 1657,
											"end": 1681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1657,
											"end": 1681,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1657,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1652,
											"end": 1655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1645,
											"end": 1682,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1688,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 1976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2010,
											"end": 2013,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1999,
											"end": 2008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2060,
											"end": 2069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2058,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2050,
											"end": 2070,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2046,
											"end": 2047,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2044,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2048,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2214,
											"end": 2218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2088,
											"end": 2219,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2088,
											"end": 2219,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2088,
											"end": 2219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2297,
											"end": 2299,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2286,
											"end": 2295,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2282,
											"end": 2300,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2279,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2229,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2229,
											"end": 2301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2229,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2229,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2379,
											"end": 2381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2364,
											"end": 2382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2355,
											"end": 2361,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2311,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2428,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2420,
											"end": 2440,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2417,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2404,
											"end": 2413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2393,
											"end": 2441,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2539,
											"end": 2543,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2536,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2522,
											"end": 2528,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2458,
											"end": 2544,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2458,
											"end": 2544,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 2458,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2544,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2450,
											"end": 2544,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1694,
											"end": 2551,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2557,
											"end": 3502,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2557,
											"end": 3502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2879,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2920,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2906,
											"end": 2915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2902,
											"end": 2921,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2921,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 2976,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2965,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2977,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2951,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2938,
											"end": 2955,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2931,
											"end": 2978,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3121,
											"end": 3125,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2995,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2995,
											"end": 3126,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2995,
											"end": 3126,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2995,
											"end": 3126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3204,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3193,
											"end": 3202,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3189,
											"end": 3207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3208,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3136,
											"end": 3208,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3136,
											"end": 3208,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 3136,
											"end": 3208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3286,
											"end": 3288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3271,
											"end": 3289,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3262,
											"end": 3268,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3218,
											"end": 3290,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3218,
											"end": 3290,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3218,
											"end": 3290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3346,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3331,
											"end": 3335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3347,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3311,
											"end": 3320,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3300,
											"end": 3348,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3490,
											"end": 3494,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3365,
											"end": 3495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3365,
											"end": 3495,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3365,
											"end": 3495,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3365,
											"end": 3495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3357,
											"end": 3495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 3502,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 3502,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 3502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 3502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 3502,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 3502,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3508,
											"end": 3676,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3508,
											"end": 3676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3591,
											"end": 3602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3625,
											"end": 3631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3620,
											"end": 3623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3665,
											"end": 3669,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3660,
											"end": 3663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3656,
											"end": 3670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3676,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3508,
											"end": 3676,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3682,
											"end": 3851,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3682,
											"end": 3851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3766,
											"end": 3777,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3800,
											"end": 3806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3844,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3835,
											"end": 3838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3816,
											"end": 3845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3851,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3682,
											"end": 3851,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3857,
											"end": 3953,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3857,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3941,
											"end": 3946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3923,
											"end": 3947,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3923,
											"end": 3947,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3923,
											"end": 3947,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3947,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3947,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3953,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3953,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4029,
											"end": 4034,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4025,
											"end": 4079,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4079,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4014,
											"end": 4079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3959,
											"end": 4085,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4091,
											"end": 4168,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 4091,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4157,
											"end": 4162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4146,
											"end": 4162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4168,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4168,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4168,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4091,
											"end": 4168,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4174,
											"end": 4328,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4174,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4253,
											"end": 4256,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4251,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4235,
											"end": 4265,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 4320,
											"end": 4321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4311,
											"end": 4317,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4306,
											"end": 4309,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4328,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4334,
											"end": 4436,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 4334,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4426,
											"end": 4428,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4422,
											"end": 4429,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4419,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4410,
											"end": 4415,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4402,
											"end": 4430,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4442,
											"end": 4600,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4442,
											"end": 4600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4582,
											"end": 4592,
											"name": "PUSH",
											"source": 1,
											"value": "66616C6C6261636B000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4578,
											"end": 4579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4570,
											"end": 4576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4566,
											"end": 4580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4559,
											"end": 4593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4600,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4606,
											"end": 4720,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 4606,
											"end": 4720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4720,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4726,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4726,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4875,
											"name": "PUSH",
											"source": 1,
											"value": "7265636569766500000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4862,
											"end": 4863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4850,
											"end": 4864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4883,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"func\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"Log\",\"type\":\"event\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"HelloWord.sol\":\"Fallback\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"HelloWord.sol\":{\"keccak256\":\"0x866cd8c9f6fe8f1ae4c76bb0b911a474eefe08e28675c00cdaf316742bbba510\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fe02de2e4db45686b2e63221c635692d236546d6c375a0403faa2f7a50e9dad\",\"dweb:/ipfs/QmYmZN9vCFNTxsvvhFhC9a4GXpRyrb9181vRyumirPhcDe\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"HelloWord.sol": {
				"ast": {
					"absolutePath": "HelloWord.sol",
					"exportedSymbols": {
						"EthReceiver": [
							57
						],
						"Fallback": [
							39
						]
					},
					"id": 58,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "Fallback",
							"nameLocation": "14319:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 11,
									"name": "Log",
									"nameLocation": "14340:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"mutability": "mutable",
												"name": "func",
												"nameLocation": "14351:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "14344:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14344:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "14365:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "14357:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14357:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14378:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "14373:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14373:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14391:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "14385:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 8,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14385:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14343:53:0"
									},
									"src": "14334:63:0"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "14430:70:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "66616c6c6261636b",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14449:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010",
																"typeString": "literal_string \"fallback\""
															},
															"value": "fallback"
														},
														{
															"expression": {
																"id": 16,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14461:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14461:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 18,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14473:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "14473:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 20,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14484:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "data",
															"nodeType": "MemberAccess",
															"src": "14484:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_b32cdf4d3c016cb0f079f205ad61c36b1a837fb3e95c70a94bdedfca0518a010",
																"typeString": "literal_string \"fallback\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_calldata_ptr",
																"typeString": "bytes calldata"
															}
														],
														"id": 14,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14445:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (string memory,address,uint256,bytes memory)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14445:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "EmitStatement",
												"src": "14440:53:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14410:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14430:0:0"
									},
									"scope": 39,
									"src": "14402:98:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "14532:63:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"hexValue": "72656365697665",
															"id": 29,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14551:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b",
																"typeString": "literal_string \"receive\""
															},
															"value": "receive"
														},
														{
															"expression": {
																"id": 30,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14562:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14562:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 32,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14574:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 33,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "14574:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14585:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_d217fcc64ca03b17db426f651be32786de1c93adfb772d680771c96323f9d57b",
																"typeString": "literal_string \"receive\""
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 28,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "14547:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (string memory,address,uint256,bytes memory)"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14547:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 36,
												"nodeType": "EmitStatement",
												"src": "14542:46:0"
											}
										]
									},
									"id": 38,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14512:2:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14532:0:0"
									},
									"scope": 39,
									"src": "14505:90:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 58,
							"src": "14310:288:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 57,
							"linearizedBaseContracts": [
								57
							],
							"name": "EthReceiver",
							"nameLocation": "15896:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 45,
									"name": "Log",
									"nameLocation": "15920:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "15929:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "15924:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15924:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"indexed": false,
												"mutability": "mutable",
												"name": "gas",
												"nameLocation": "15943:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "15938:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15938:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15923:24:0"
									},
									"src": "15914:34:0"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "15981:47:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 49,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16000:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "16000:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 51,
																"name": "gasleft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967289,
																"src": "16011:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16011:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 48,
														"name": "Log",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "15996:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15996:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "EmitStatement",
												"src": "15991:30:0"
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15961:2:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15981:0:0"
									},
									"scope": 57,
									"src": "15954:74:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 58,
							"src": "15887:144:0",
							"usedErrors": []
						}
					],
					"src": "32:25439:0"
				},
				"id": 0
			}
		}
	}
}