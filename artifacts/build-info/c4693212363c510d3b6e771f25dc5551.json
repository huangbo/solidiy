{
	"id": "c4693212363c510d3b6e771f25dc5551",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Attact.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.7;\n\n/*\ntx.origin 攻击\n\n*/\ncontract TxUserWallet {\n    event UserLog(uint256 gg);\n\n    address owner;\n\n    constructor() payable {\n        owner = msg.sender;\n    }\n\n    function transferTo(address payable dest, uint amount) external payable{\n        require(tx.origin == owner);\n        emit UserLog(gasleft());\n        dest.transfer(amount);\n        // dest.call{value: amount, gas: 2300}(\"\");\n    }\n\n    function getBalance() public view returns(uint) {\n        uint _balance = address(this).balance;\n        return _balance;\n    }\n}\n\ninterface InterfaceUserWallet {\n    function transferTo(address payable dest, uint amount) external payable;\n}\n\ncontract TxAttackWallet {\n    event AttackLog(uint256 gg);\n\n    address payable owner;\n\n    constructor() payable {\n        owner = payable(msg.sender);\n    }\n\n    receive() external payable {\n        emit AttackLog(gasleft());\n        // InterfaceUserWallet(msg.sender).transferTo(payable(address(this)), 1 ether);\n    }\n\n    function getBalance() public view returns(uint) {\n        uint _balance = address(this).balance;\n        return _balance;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Attact.sol": {
				"InterfaceUserWallet": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferTo",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"transferTo(address,uint256)": "2ccb1b30"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Attact.sol\":\"InterfaceUserWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Attact.sol\":{\"keccak256\":\"0xa7679e96864e958d16895597866697cd3126c1f65777fa5b8a36bac1a8c74e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b68d4ea68c58eedc2144bce2a5665f1f24f0886497d1f3de0836cfef7bed3fe\",\"dweb:/ipfs/Qmf9hD3mdsGjcbAKWJEZX19JnCyKNCwnMa6ior4xvJRosL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TxAttackWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gg",
									"type": "uint256"
								}
							],
							"name": "AttackLog",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Attact.sol\":703:1159  contract TxAttackWallet {... */\n  mstore(0x40, 0x80)\n    /* \"Attact.sol\":843:853  msg.sender */\n  caller\n    /* \"Attact.sol\":827:832  owner */\n  0x00\n  dup1\n    /* \"Attact.sol\":827:854  owner = payable(msg.sender) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Attact.sol\":703:1159  contract TxAttackWallet {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Attact.sol\":703:1159  contract TxAttackWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_3\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"Attact.sol\":909:929  AttackLog(gasleft()) */\n      0xc7897b5636978a6feb8bf7835440710441b1be47e5159622fbfb1798a1df3939\n        /* \"Attact.sol\":919:928  gasleft() */\n      gas\n        /* \"Attact.sol\":909:929  AttackLog(gasleft()) */\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Attact.sol\":703:1159  contract TxAttackWallet {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Attact.sol\":1030:1157  function getBalance() public view returns(uint) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_8:\n      pop\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_10:\n        /* \"Attact.sol\":1072:1076  uint */\n      0x00\n        /* \"Attact.sol\":1088:1101  uint _balance */\n      dup1\n        /* \"Attact.sol\":1104:1125  address(this).balance */\n      selfbalance\n        /* \"Attact.sol\":1088:1125  uint _balance = address(this).balance */\n      swap1\n      pop\n        /* \"Attact.sol\":1142:1150  _balance */\n      dup1\n        /* \"Attact.sol\":1135:1150  return _balance */\n      swap2\n      pop\n      pop\n        /* \"Attact.sol\":1030:1157  function getBalance() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:125   */\n    tag_14:\n        /* \"#utility.yul\":94:118   */\n      tag_16\n        /* \"#utility.yul\":112:117   */\n      dup2\n        /* \"#utility.yul\":94:118   */\n      tag_17\n      jump\t// in\n    tag_16:\n        /* \"#utility.yul\":89:92   */\n      dup3\n        /* \"#utility.yul\":82:119   */\n      mstore\n        /* \"#utility.yul\":7:125   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":131:353   */\n    tag_7:\n        /* \"#utility.yul\":224:228   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":251:260   */\n      dup3\n        /* \"#utility.yul\":247:265   */\n      add\n        /* \"#utility.yul\":239:265   */\n      swap1\n      pop\n        /* \"#utility.yul\":275:346   */\n      tag_19\n        /* \"#utility.yul\":343:344   */\n      0x00\n        /* \"#utility.yul\":332:341   */\n      dup4\n        /* \"#utility.yul\":328:345   */\n      add\n        /* \"#utility.yul\":319:325   */\n      dup5\n        /* \"#utility.yul\":275:346   */\n      tag_14\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":131:353   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":359:436   */\n    tag_17:\n        /* \"#utility.yul\":396:403   */\n      0x00\n        /* \"#utility.yul\":425:430   */\n      dup2\n        /* \"#utility.yul\":414:430   */\n      swap1\n      pop\n        /* \"#utility.yul\":359:436   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212205581e5a11bbda00506d23a4ff232bb63111cefe5d5de33e99de6b5953215e39864736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_85": {
									"entryPoint": null,
									"id": 85,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060f8806100526000396000f3fe608060405260043610601f5760003560e01c806312065fe014605f57605a565b36605a577fc7897b5636978a6feb8bf7835440710441b1be47e5159622fbfb1798a1df39395a60405160509190609f565b60405180910390a1005b600080fd5b348015606a57600080fd5b5060716085565b604051607c9190609f565b60405180910390f35b6000804790508091505090565b60998160b8565b82525050565b600060208201905060b260008301846092565b92915050565b600081905091905056fea26469706673582212205581e5a11bbda00506d23a4ff232bb63111cefe5d5de33e99de6b5953215e39864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xF8 DUP1 PUSH2 0x52 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x5F JUMPI PUSH1 0x5A JUMP JUMPDEST CALLDATASIZE PUSH1 0x5A JUMPI PUSH32 0xC7897B5636978A6FEB8BF7835440710441B1BE47E5159622FBFB1798A1DF3939 GAS PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x71 PUSH1 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x7C SWAP2 SWAP1 PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x99 DUP2 PUSH1 0xB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE DUP2 0xE5 LOG1 SHL 0xBD LOG0 SDIV MOD 0xD2 GASPRICE 0x4F CALLCODE ORIGIN 0xBB PUSH4 0x111CEFE5 0xD5 0xDE CALLER 0xE9 SWAP14 0xE6 0xB5 SWAP6 ORIGIN ISZERO 0xE3 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "703:456:0:-:0;;;843:10;827:5;;:27;;;;;;;;;;;;;;;;;;703:456;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_94": {
									"entryPoint": null,
									"id": 94,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getBalance_110": {
									"entryPoint": 133,
									"id": 110,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 184,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:439:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "72:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "89:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "112:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "94:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "94:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "82:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "82:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "60:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "67:3:1",
														"type": ""
													}
												],
												"src": "7:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "229:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "239:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "251:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "247:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "247:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "239:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "319:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "332:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "343:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "328:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "328:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "275:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "275:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "201:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "224:4:1",
														"type": ""
													}
												],
												"src": "131:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "414:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "425:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "414:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "386:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "396:7:1",
														"type": ""
													}
												],
												"src": "359:77:1"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405260043610601f5760003560e01c806312065fe014605f57605a565b36605a577fc7897b5636978a6feb8bf7835440710441b1be47e5159622fbfb1798a1df39395a60405160509190609f565b60405180910390a1005b600080fd5b348015606a57600080fd5b5060716085565b604051607c9190609f565b60405180910390f35b6000804790508091505090565b60998160b8565b82525050565b600060208201905060b260008301846092565b92915050565b600081905091905056fea26469706673582212205581e5a11bbda00506d23a4ff232bb63111cefe5d5de33e99de6b5953215e39864736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x1F JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH1 0x5F JUMPI PUSH1 0x5A JUMP JUMPDEST CALLDATASIZE PUSH1 0x5A JUMPI PUSH32 0xC7897B5636978A6FEB8BF7835440710441B1BE47E5159622FBFB1798A1DF3939 GAS PUSH1 0x40 MLOAD PUSH1 0x50 SWAP2 SWAP1 PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH1 0x6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x71 PUSH1 0x85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x7C SWAP2 SWAP1 PUSH1 0x9F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x99 DUP2 PUSH1 0xB8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0xB2 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x92 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SSTORE DUP2 0xE5 LOG1 SHL 0xBD LOG0 SDIV MOD 0xD2 GASPRICE 0x4F CALLCODE ORIGIN 0xBB PUSH4 0x111CEFE5 0xD5 0xDE CALLER 0xE9 SWAP14 0xE6 0xB5 SWAP6 ORIGIN ISZERO 0xE3 SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "703:456:0:-:0;;;;;;;;;;;;;;;;;;;;;;;909:20;919:9;909:20;;;;;;:::i;:::-;;;;;;;;703:456;;;;;1030:127;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1072:4;1088:13;1104:21;1088:37;;1142:8;1135:15;;;1030:127;:::o;7:118:1:-;94:24;112:5;94:24;:::i;:::-;89:3;82:37;7:118;;:::o;131:222::-;224:4;262:2;251:9;247:18;239:26;;275:71;343:1;332:9;328:17;319:6;275:71;:::i;:::-;131:222;;;;:::o;359:77::-;396:7;425:5;414:16;;359:77;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "49600",
								"executionCost": "24341",
								"totalCost": "73941"
							},
							"external": {
								"getBalance()": "330"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 703,
									"end": 1159,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 843,
									"end": 853,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 827,
									"end": 832,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 827,
									"end": 854,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 827,
									"end": 854,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 827,
									"end": 854,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 827,
									"end": 854,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 703,
									"end": 1159,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205581e5a11bbda00506d23a4ff232bb63111cefe5d5de33e99de6b5953215e39864736f6c63430008070033",
									".code": [
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "C7897B5636978A6FEB8BF7835440710441B1BE47E5159622FBFB1798A1DF3939"
										},
										{
											"begin": 919,
											"end": 928,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 909,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 909,
											"end": 929,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 909,
											"end": 929,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 909,
											"end": 929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 929,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 703,
											"end": 1159,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1072,
											"end": 1076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1101,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1104,
											"end": 1125,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1088,
											"end": 1125,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1142,
											"end": 1150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1135,
											"end": 1150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1030,
											"end": 1157,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 112,
											"end": 117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 94,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 94,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 89,
											"end": 92,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 82,
											"end": 119,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 125,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 224,
											"end": 228,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 251,
											"end": 260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 247,
											"end": 265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 239,
											"end": 265,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 343,
											"end": 344,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 332,
											"end": 341,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 328,
											"end": 345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 319,
											"end": 325,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 275,
											"end": 346,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 275,
											"end": 346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 131,
											"end": 353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 396,
											"end": 403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 425,
											"end": 430,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 414,
											"end": 430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 359,
											"end": 436,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gg\",\"type\":\"uint256\"}],\"name\":\"AttackLog\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Attact.sol\":\"TxAttackWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Attact.sol\":{\"keccak256\":\"0xa7679e96864e958d16895597866697cd3126c1f65777fa5b8a36bac1a8c74e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b68d4ea68c58eedc2144bce2a5665f1f24f0886497d1f3de0836cfef7bed3fe\",\"dweb:/ipfs/Qmf9hD3mdsGjcbAKWJEZX19JnCyKNCwnMa6ior4xvJRosL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 73,
								"contract": "Attact.sol:TxAttackWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							}
						],
						"types": {
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TxUserWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "gg",
									"type": "uint256"
								}
							],
							"name": "UserLog",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "getBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address payable",
									"name": "dest",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferTo",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Attact.sol\":80:589  contract TxUserWallet {... */\n  mstore(0x40, 0x80)\n    /* \"Attact.sol\":200:210  msg.sender */\n  caller\n    /* \"Attact.sol\":192:197  owner */\n  0x00\n  dup1\n    /* \"Attact.sol\":192:210  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Attact.sol\":80:589  contract TxUserWallet {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Attact.sol\":80:589  contract TxUserWallet {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x12065fe0\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2ccb1b30\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Attact.sol\":460:587  function getBalance() public view returns(uint) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_4\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_4:\n      pop\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Attact.sol\":223:454  function transferTo(address payable dest, uint amount) external payable{... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"Attact.sol\":460:587  function getBalance() public view returns(uint) {... */\n    tag_6:\n        /* \"Attact.sol\":502:506  uint */\n      0x00\n        /* \"Attact.sol\":518:531  uint _balance */\n      dup1\n        /* \"Attact.sol\":534:555  address(this).balance */\n      selfbalance\n        /* \"Attact.sol\":518:555  uint _balance = address(this).balance */\n      swap1\n      pop\n        /* \"Attact.sol\":572:580  _balance */\n      dup1\n        /* \"Attact.sol\":565:580  return _balance */\n      swap2\n      pop\n      pop\n        /* \"Attact.sol\":460:587  function getBalance() public view returns(uint) {... */\n      swap1\n      jump\t// out\n        /* \"Attact.sol\":223:454  function transferTo(address payable dest, uint amount) external payable{... */\n    tag_12:\n        /* \"Attact.sol\":325:330  owner */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attact.sol\":312:330  tx.origin == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attact.sol\":312:321  tx.origin */\n      origin\n        /* \"Attact.sol\":312:330  tx.origin == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Attact.sol\":304:331  require(tx.origin == owner) */\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_15:\n        /* \"Attact.sol\":346:364  UserLog(gasleft()) */\n      0xee850fde8b552ceb0af07907aa59e4b7a9813a3803c197c4c74e69b65868baa6\n        /* \"Attact.sol\":354:363  gasleft() */\n      gas\n        /* \"Attact.sol\":346:364  UserLog(gasleft()) */\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Attact.sol\":374:378  dest */\n      dup2\n        /* \"Attact.sol\":374:387  dest.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Attact.sol\":374:395  dest.transfer(amount) */\n      0x08fc\n        /* \"Attact.sol\":388:394  amount */\n      dup3\n        /* \"Attact.sol\":374:395  dest.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n        /* \"Attact.sol\":223:454  function transferTo(address payable dest, uint amount) external payable{... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:162   */\n    tag_20:\n        /* \"#utility.yul\":61:66   */\n      0x00\n        /* \"#utility.yul\":99:105   */\n      dup2\n        /* \"#utility.yul\":86:106   */\n      calldataload\n        /* \"#utility.yul\":77:106   */\n      swap1\n      pop\n        /* \"#utility.yul\":115:156   */\n      tag_22\n        /* \"#utility.yul\":150:155   */\n      dup2\n        /* \"#utility.yul\":115:156   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":7:162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":168:307   */\n    tag_24:\n        /* \"#utility.yul\":214:219   */\n      0x00\n        /* \"#utility.yul\":252:258   */\n      dup2\n        /* \"#utility.yul\":239:259   */\n      calldataload\n        /* \"#utility.yul\":230:259   */\n      swap1\n      pop\n        /* \"#utility.yul\":268:301   */\n      tag_26\n        /* \"#utility.yul\":295:300   */\n      dup2\n        /* \"#utility.yul\":268:301   */\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":168:307   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":313:803   */\n    tag_11:\n        /* \"#utility.yul\":389:395   */\n      0x00\n        /* \"#utility.yul\":397:403   */\n      dup1\n        /* \"#utility.yul\":446:448   */\n      0x40\n        /* \"#utility.yul\":434:443   */\n      dup4\n        /* \"#utility.yul\":425:432   */\n      dup6\n        /* \"#utility.yul\":421:444   */\n      sub\n        /* \"#utility.yul\":417:449   */\n      slt\n        /* \"#utility.yul\":414:533   */\n      iszero\n      tag_29\n      jumpi\n        /* \"#utility.yul\":452:531   */\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":414:533   */\n    tag_29:\n        /* \"#utility.yul\":572:573   */\n      0x00\n        /* \"#utility.yul\":597:658   */\n      tag_32\n        /* \"#utility.yul\":650:657   */\n      dup6\n        /* \"#utility.yul\":641:647   */\n      dup3\n        /* \"#utility.yul\":630:639   */\n      dup7\n        /* \"#utility.yul\":626:648   */\n      add\n        /* \"#utility.yul\":597:658   */\n      tag_20\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":587:658   */\n      swap3\n      pop\n        /* \"#utility.yul\":543:668   */\n      pop\n        /* \"#utility.yul\":707:709   */\n      0x20\n        /* \"#utility.yul\":733:786   */\n      tag_33\n        /* \"#utility.yul\":778:785   */\n      dup6\n        /* \"#utility.yul\":769:775   */\n      dup3\n        /* \"#utility.yul\":758:767   */\n      dup7\n        /* \"#utility.yul\":754:776   */\n      add\n        /* \"#utility.yul\":733:786   */\n      tag_24\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":723:786   */\n      swap2\n      pop\n        /* \"#utility.yul\":678:796   */\n      pop\n        /* \"#utility.yul\":313:803   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":809:927   */\n    tag_34:\n        /* \"#utility.yul\":896:920   */\n      tag_36\n        /* \"#utility.yul\":914:919   */\n      dup2\n        /* \"#utility.yul\":896:920   */\n      tag_37\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":891:894   */\n      dup3\n        /* \"#utility.yul\":884:921   */\n      mstore\n        /* \"#utility.yul\":809:927   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":933:1155   */\n    tag_8:\n        /* \"#utility.yul\":1026:1030   */\n      0x00\n        /* \"#utility.yul\":1064:1066   */\n      0x20\n        /* \"#utility.yul\":1053:1062   */\n      dup3\n        /* \"#utility.yul\":1049:1067   */\n      add\n        /* \"#utility.yul\":1041:1067   */\n      swap1\n      pop\n        /* \"#utility.yul\":1077:1148   */\n      tag_39\n        /* \"#utility.yul\":1145:1146   */\n      0x00\n        /* \"#utility.yul\":1134:1143   */\n      dup4\n        /* \"#utility.yul\":1130:1147   */\n      add\n        /* \"#utility.yul\":1121:1127   */\n      dup5\n        /* \"#utility.yul\":1077:1148   */\n      tag_34\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":933:1155   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1346   */\n    tag_42:\n        /* \"#utility.yul\":1287:1294   */\n      0x00\n        /* \"#utility.yul\":1316:1340   */\n      tag_44\n        /* \"#utility.yul\":1334:1339   */\n      dup3\n        /* \"#utility.yul\":1316:1340   */\n      tag_45\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1305:1340   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1352:1478   */\n    tag_45:\n        /* \"#utility.yul\":1389:1396   */\n      0x00\n        /* \"#utility.yul\":1429:1471   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1422:1427   */\n      dup3\n        /* \"#utility.yul\":1418:1472   */\n      and\n        /* \"#utility.yul\":1407:1472   */\n      swap1\n      pop\n        /* \"#utility.yul\":1352:1478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1484:1561   */\n    tag_37:\n        /* \"#utility.yul\":1521:1528   */\n      0x00\n        /* \"#utility.yul\":1550:1555   */\n      dup2\n        /* \"#utility.yul\":1539:1555   */\n      swap1\n      pop\n        /* \"#utility.yul\":1484:1561   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1690:1807   */\n    tag_31:\n        /* \"#utility.yul\":1799:1800   */\n      0x00\n        /* \"#utility.yul\":1796:1797   */\n      dup1\n        /* \"#utility.yul\":1789:1801   */\n      revert\n        /* \"#utility.yul\":1813:1951   */\n    tag_23:\n        /* \"#utility.yul\":1894:1926   */\n      tag_52\n        /* \"#utility.yul\":1920:1925   */\n      dup2\n        /* \"#utility.yul\":1894:1926   */\n      tag_42\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1887:1892   */\n      dup2\n        /* \"#utility.yul\":1884:1927   */\n      eq\n        /* \"#utility.yul\":1874:1945   */\n      tag_53\n      jumpi\n        /* \"#utility.yul\":1941:1942   */\n      0x00\n        /* \"#utility.yul\":1938:1939   */\n      dup1\n        /* \"#utility.yul\":1931:1943   */\n      revert\n        /* \"#utility.yul\":1874:1945   */\n    tag_53:\n        /* \"#utility.yul\":1813:1951   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1957:2079   */\n    tag_27:\n        /* \"#utility.yul\":2030:2054   */\n      tag_55\n        /* \"#utility.yul\":2048:2053   */\n      dup2\n        /* \"#utility.yul\":2030:2054   */\n      tag_37\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":2023:2028   */\n      dup2\n        /* \"#utility.yul\":2020:2055   */\n      eq\n        /* \"#utility.yul\":2010:2073   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":2069:2070   */\n      0x00\n        /* \"#utility.yul\":2066:2067   */\n      dup1\n        /* \"#utility.yul\":2059:2071   */\n      revert\n        /* \"#utility.yul\":2010:2073   */\n    tag_56:\n        /* \"#utility.yul\":1957:2079   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200ce001bf64818c961c74e570128a6fe62a798c2c1ad8f30ca2e86dfaafa96c2764736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610295806100536000396000f3fe6080604052600436106100295760003560e01c806312065fe01461002e5780632ccb1b3014610059575b600080fd5b34801561003a57600080fd5b50610043610075565b60405161005091906101d5565b60405180910390f35b610073600480360381019061006e9190610186565b610082565b005b6000804790508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146100da57600080fd5b7fee850fde8b552ceb0af07907aa59e4b7a9813a3803c197c4c74e69b65868baa65a60405161010991906101d5565b60405180910390a18173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610157573d6000803e3d6000fd5b505050565b60008135905061016b81610231565b92915050565b60008135905061018081610248565b92915050565b6000806040838503121561019d5761019c61022c565b5b60006101ab8582860161015c565b92505060206101bc85828601610171565b9150509250929050565b6101cf81610222565b82525050565b60006020820190506101ea60008301846101c6565b92915050565b60006101fb82610202565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61023a816101f0565b811461024557600080fd5b50565b61025181610222565b811461025c57600080fd5b5056fea26469706673582212200ce001bf64818c961c74e570128a6fe62a798c2c1ad8f30ca2e86dfaafa96c2764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x295 DUP1 PUSH2 0x53 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x2CCB1B30 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xEE850FDE8B552CEB0AF07907AA59E4B7A9813A3803C197C4C74E69B65868BAA6 GAS PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x157 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B DUP2 PUSH2 0x231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180 DUP2 PUSH2 0x248 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19D JUMPI PUSH2 0x19C PUSH2 0x22C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB DUP6 DUP3 DUP7 ADD PUSH2 0x15C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BC DUP6 DUP3 DUP7 ADD PUSH2 0x171 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF DUP2 PUSH2 0x222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A DUP2 PUSH2 0x1F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x251 DUP2 PUSH2 0x222 JUMP JUMPDEST DUP2 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE0 ADD 0xBF PUSH5 0x818C961C74 0xE5 PUSH17 0x128A6FE62A798C2C1AD8F30CA2E86DFAAF 0xA9 PUSH13 0x2764736F6C6343000807003300 ",
							"sourceMap": "80:509:0:-:0;;;200:10;192:5;;:18;;;;;;;;;;;;;;;;;;80:509;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getBalance_58": {
									"entryPoint": 117,
									"id": 58,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferTo_42": {
									"entryPoint": 130,
									"id": 42,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_payablet_uint256": {
									"entryPoint": 390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 496,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 584,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2082:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "67:95:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "77:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "86:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "86:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "77:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "150:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nodeType": "YulIdentifier",
																	"src": "115:34:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "115:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "115:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "45:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "53:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "61:5:1",
														"type": ""
													}
												],
												"src": "7:155:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "230:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "252:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "239:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "239:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "230:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "295:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "268:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "268:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "198:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "206:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "214:5:1",
														"type": ""
													}
												],
												"src": "168:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "404:399:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "450:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "452:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "452:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "452:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "425:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "434:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "446:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "417:32:1"
															},
															"nodeType": "YulIf",
															"src": "414:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "543:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "558:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "572:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "562:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "587:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "630:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "641:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "626:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "626:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "650:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nodeType": "YulIdentifier",
																			"src": "597:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "597:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "587:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "678:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "693:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "707:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "697:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "723:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "758:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "769:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "754:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "754:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "778:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "733:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "733:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "723:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_payablet_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "366:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "377:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "389:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "397:6:1",
														"type": ""
													}
												],
												"src": "313:490:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "874:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "891:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "914:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "896:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "896:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "884:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "884:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "884:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "862:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "869:3:1",
														"type": ""
													}
												],
												"src": "809:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1031:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1041:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1053:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1064:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1049:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1049:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1041:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1121:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1134:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1145:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1130:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1130:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1077:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1077:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1077:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1003:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1015:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1026:4:1",
														"type": ""
													}
												],
												"src": "933:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1201:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1211:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1227:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1221:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1221:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1211:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1194:6:1",
														"type": ""
													}
												],
												"src": "1161:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1295:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1305:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1334:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1316:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1316:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1305:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1277:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1287:7:1",
														"type": ""
													}
												],
												"src": "1242:104:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1397:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1407:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1422:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1407:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1379:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1389:7:1",
														"type": ""
													}
												],
												"src": "1352:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1529:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1539:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1550:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1539:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1511:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1521:7:1",
														"type": ""
													}
												],
												"src": "1484:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1656:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1673:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1676:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1666:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1567:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1779:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1796:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1799:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1789:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1789:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1690:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1864:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1929:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1938:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1941:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1931:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1931:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1931:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1887:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1920:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nodeType": "YulIdentifier",
																					"src": "1894:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1894:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1884:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1884:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1877:51:1"
															},
															"nodeType": "YulIf",
															"src": "1874:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1857:5:1",
														"type": ""
													}
												],
												"src": "1813:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2000:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2057:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2066:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2069:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2059:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2059:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2059:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2023:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2048:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2030:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2030:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2020:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2020:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:43:1"
															},
															"nodeType": "YulIf",
															"src": "2010:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1993:5:1",
														"type": ""
													}
												],
												"src": "1957:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100295760003560e01c806312065fe01461002e5780632ccb1b3014610059575b600080fd5b34801561003a57600080fd5b50610043610075565b60405161005091906101d5565b60405180910390f35b610073600480360381019061006e9190610186565b610082565b005b6000804790508091505090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff16146100da57600080fd5b7fee850fde8b552ceb0af07907aa59e4b7a9813a3803c197c4c74e69b65868baa65a60405161010991906101d5565b60405180910390a18173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610157573d6000803e3d6000fd5b505050565b60008135905061016b81610231565b92915050565b60008135905061018081610248565b92915050565b6000806040838503121561019d5761019c61022c565b5b60006101ab8582860161015c565b92505060206101bc85828601610171565b9150509250929050565b6101cf81610222565b82525050565b60006020820190506101ea60008301846101c6565b92915050565b60006101fb82610202565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61023a816101f0565b811461024557600080fd5b50565b61025181610222565b811461025c57600080fd5b5056fea26469706673582212200ce001bf64818c961c74e570128a6fe62a798c2c1ad8f30ca2e86dfaafa96c2764736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x12065FE0 EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0x2CCB1B30 EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x186 JUMP JUMPDEST PUSH2 0x82 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SELFBALANCE SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0xEE850FDE8B552CEB0AF07907AA59E4B7A9813A3803C197C4C74E69B65868BAA6 GAS PUSH1 0x40 MLOAD PUSH2 0x109 SWAP2 SWAP1 PUSH2 0x1D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x157 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16B DUP2 PUSH2 0x231 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x180 DUP2 PUSH2 0x248 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19D JUMPI PUSH2 0x19C PUSH2 0x22C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1AB DUP6 DUP3 DUP7 ADD PUSH2 0x15C JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1BC DUP6 DUP3 DUP7 ADD PUSH2 0x171 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF DUP2 PUSH2 0x222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1EA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FB DUP3 PUSH2 0x202 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23A DUP2 PUSH2 0x1F0 JUMP JUMPDEST DUP2 EQ PUSH2 0x245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x251 DUP2 PUSH2 0x222 JUMP JUMPDEST DUP2 EQ PUSH2 0x25C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC 0xE0 ADD 0xBF PUSH5 0x818C961C74 0xE5 PUSH17 0x128A6FE62A798C2C1AD8F30CA2E86DFAAF 0xA9 PUSH13 0x2764736F6C6343000807003300 ",
							"sourceMap": "80:509:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;460:127;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;223:231;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;460:127;502:4;518:13;534:21;518:37;;572:8;565:15;;;460:127;:::o;223:231::-;325:5;;;;;;;;;;312:18;;:9;:18;;;304:27;;;;;;346:18;354:9;346:18;;;;;;:::i;:::-;;;;;;;;374:4;:13;;:21;388:6;374:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:231;;:::o;7:155:1:-;61:5;99:6;86:20;77:29;;115:41;150:5;115:41;:::i;:::-;7:155;;;;:::o;168:139::-;214:5;252:6;239:20;230:29;;268:33;295:5;268:33;:::i;:::-;168:139;;;;:::o;313:490::-;389:6;397;446:2;434:9;425:7;421:23;417:32;414:119;;;452:79;;:::i;:::-;414:119;572:1;597:61;650:7;641:6;630:9;626:22;597:61;:::i;:::-;587:71;;543:125;707:2;733:53;778:7;769:6;758:9;754:22;733:53;:::i;:::-;723:63;;678:118;313:490;;;;;:::o;809:118::-;896:24;914:5;896:24;:::i;:::-;891:3;884:37;809:118;;:::o;933:222::-;1026:4;1064:2;1053:9;1049:18;1041:26;;1077:71;1145:1;1134:9;1130:17;1121:6;1077:71;:::i;:::-;933:222;;;;:::o;1242:104::-;1287:7;1316:24;1334:5;1316:24;:::i;:::-;1305:35;;1242:104;;;:::o;1352:126::-;1389:7;1429:42;1422:5;1418:54;1407:65;;1352:126;;;:::o;1484:77::-;1521:7;1550:5;1539:16;;1484:77;;;:::o;1690:117::-;1799:1;1796;1789:12;1813:138;1894:32;1920:5;1894:32;:::i;:::-;1887:5;1884:43;1874:71;;1941:1;1938;1931:12;1874:71;1813:138;:::o;1957:122::-;2030:24;2048:5;2030:24;:::i;:::-;2023:5;2020:35;2010:63;;2069:1;2066;2059:12;2010:63;1957:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "132200",
								"executionCost": "24419",
								"totalCost": "156619"
							},
							"external": {
								"getBalance()": "330",
								"transferTo(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 80,
									"end": 589,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 80,
									"end": 589,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 80,
									"end": 589,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 200,
									"end": 210,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 192,
									"end": 197,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 192,
									"end": 197,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 192,
									"end": 210,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 192,
									"end": 210,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 192,
									"end": 210,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 192,
									"end": 210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 80,
									"end": 589,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 589,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 80,
									"end": 589,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 80,
									"end": 589,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 589,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 80,
									"end": 589,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 80,
									"end": 589,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ce001bf64818c961c74e570128a6fe62a798c2c1ad8f30ca2e86dfaafa96c2764736f6c63430008070033",
									".code": [
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "12065FE0"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "2CCB1B30"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 80,
											"end": 589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 80,
											"end": 589,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 502,
											"end": 506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 518,
											"end": 531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 534,
											"end": 555,
											"name": "SELFBALANCE",
											"source": 0
										},
										{
											"begin": 518,
											"end": 555,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 518,
											"end": 555,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 572,
											"end": 580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 565,
											"end": 580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 565,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 565,
											"end": 580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 460,
											"end": 587,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 223,
											"end": 454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 325,
											"end": 330,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 325,
											"end": 330,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 325,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 325,
											"end": 330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 312,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 312,
											"end": 330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 312,
											"end": 321,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 312,
											"end": 330,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 312,
											"end": 330,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 312,
											"end": 330,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 304,
											"end": 331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 304,
											"end": 331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 304,
											"end": 331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 304,
											"end": 331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 304,
											"end": 331,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 304,
											"end": 331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "EE850FDE8B552CEB0AF07907AA59E4B7A9813A3803C197C4C74E69B65868BAA6"
										},
										{
											"begin": 354,
											"end": 363,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 346,
											"end": 364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 346,
											"end": 364,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 374,
											"end": 387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 388,
											"end": 394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 374,
											"end": 395,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 374,
											"end": 395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 395,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 374,
											"end": 395,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 374,
											"end": 395,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 374,
											"end": 395,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 454,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 61,
											"end": 66,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 99,
											"end": 105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 106,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 77,
											"end": 106,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 150,
											"end": 155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 115,
											"end": 156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 115,
											"end": 156,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 162,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 258,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 239,
											"end": 259,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 230,
											"end": 259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 295,
											"end": 300,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 268,
											"end": 301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 268,
											"end": 301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 168,
											"end": 307,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 389,
											"end": 395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 397,
											"end": 403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 446,
											"end": 448,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 434,
											"end": 443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 425,
											"end": 432,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 421,
											"end": 444,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 417,
											"end": 449,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 452,
											"end": 531,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 414,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 414,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 572,
											"end": 573,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 650,
											"end": 657,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 641,
											"end": 647,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 630,
											"end": 639,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 626,
											"end": 648,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 597,
											"end": 658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 597,
											"end": 658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 587,
											"end": 658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 543,
											"end": 668,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 778,
											"end": 785,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 767,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 754,
											"end": 776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 733,
											"end": 786,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 733,
											"end": 786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 723,
											"end": 786,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 678,
											"end": 796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 313,
											"end": 803,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 809,
											"end": 927,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 809,
											"end": 927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 896,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 896,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 896,
											"end": 920,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 896,
											"end": 920,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 896,
											"end": 920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 891,
											"end": 894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 884,
											"end": 921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 809,
											"end": 927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 809,
											"end": 927,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1053,
											"end": 1062,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1049,
											"end": 1067,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1067,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1041,
											"end": 1067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1145,
											"end": 1146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1077,
											"end": 1148,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 933,
											"end": 1155,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1242,
											"end": 1346,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1242,
											"end": 1346,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1287,
											"end": 1294,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1316,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1334,
											"end": 1339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1316,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1316,
											"end": 1340,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1316,
											"end": 1340,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1316,
											"end": 1340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1340,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1305,
											"end": 1340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1346,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1346,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1346,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1471,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1418,
											"end": 1472,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1407,
											"end": 1472,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1550,
											"end": 1555,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1555,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1484,
											"end": 1561,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1690,
											"end": 1807,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1690,
											"end": 1807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1799,
											"end": 1800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1797,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1801,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1951,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1813,
											"end": 1951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1920,
											"end": 1925,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1894,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1894,
											"end": 1926,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1894,
											"end": 1926,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1894,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1887,
											"end": 1892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1927,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1874,
											"end": 1945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1942,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1938,
											"end": 1939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1874,
											"end": 1945,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1874,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1951,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1957,
											"end": 2079,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1957,
											"end": 2079,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2048,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 2030,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2020,
											"end": 2055,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2010,
											"end": 2073,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2069,
											"end": 2070,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2066,
											"end": 2067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2071,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2010,
											"end": 2073,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2010,
											"end": 2073,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 2079,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1957,
											"end": 2079,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getBalance()": "12065fe0",
							"transferTo(address,uint256)": "2ccb1b30"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gg\",\"type\":\"uint256\"}],\"name\":\"UserLog\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"dest\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Attact.sol\":\"TxUserWallet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Attact.sol\":{\"keccak256\":\"0xa7679e96864e958d16895597866697cd3126c1f65777fa5b8a36bac1a8c74e89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b68d4ea68c58eedc2144bce2a5665f1f24f0886497d1f3de0836cfef7bed3fe\",\"dweb:/ipfs/Qmf9hD3mdsGjcbAKWJEZX19JnCyKNCwnMa6ior4xvJRosL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "Attact.sol:TxUserWallet",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Attact.sol": {
				"ast": {
					"absolutePath": "Attact.sol",
					"exportedSymbols": {
						"InterfaceUserWallet": [
							67
						],
						"TxAttackWallet": [
							111
						],
						"TxUserWallet": [
							59
						]
					},
					"id": 112,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:22:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 59,
							"linearizedBaseContracts": [
								59
							],
							"name": "TxUserWallet",
							"nameLocation": "89:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 5,
									"name": "UserLog",
									"nameLocation": "114:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3,
												"indexed": false,
												"mutability": "mutable",
												"name": "gg",
												"nameLocation": "130:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 5,
												"src": "122:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "121:12:0"
									},
									"src": "108:26:0"
								},
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "148:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 59,
									"src": "140:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "140:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "182:35:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 10,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "192:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 11,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "200:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 12,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "200:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "192:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 14,
												"nodeType": "ExpressionStatement",
												"src": "192:18:0"
											}
										]
									},
									"id": 16,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "171:2:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "182:0:0"
									},
									"scope": 59,
									"src": "160:57:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "294:160:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 27,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 24,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "312:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 25,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "312:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 26,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "325:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "312:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 23,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "304:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 28,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "304:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 29,
												"nodeType": "ExpressionStatement",
												"src": "304:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 31,
																"name": "gasleft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967289,
																"src": "354:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "354:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 30,
														"name": "UserLog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "346:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 33,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "346:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 34,
												"nodeType": "EmitStatement",
												"src": "341:23:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 38,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 20,
															"src": "388:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 35,
															"name": "dest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "374:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 37,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "374:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "374:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "374:21:0"
											}
										]
									},
									"functionSelector": "2ccb1b30",
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferTo",
									"nameLocation": "232:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "dest",
												"nameLocation": "259:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "243:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "243:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "270:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "265:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "265:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "242:35:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "294:0:0"
									},
									"scope": 59,
									"src": "223:231:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "508:79:0",
										"statements": [
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "_balance",
														"nameLocation": "523:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 57,
														"src": "518:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 47,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "518:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 51,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "542:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TxUserWallet_$59",
																	"typeString": "contract TxUserWallet"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TxUserWallet_$59",
																	"typeString": "contract TxUserWallet"
																}
															],
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "534:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 49,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "534:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "534:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "534:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "518:37:0"
											},
											{
												"expression": {
													"id": 55,
													"name": "_balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 48,
													"src": "572:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 46,
												"id": 56,
												"nodeType": "Return",
												"src": "565:15:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 58,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "469:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "479:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "502:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "502:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "501:6:0"
									},
									"scope": 59,
									"src": "460:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 112,
							"src": "80:509:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 67,
							"linearizedBaseContracts": [
								67
							],
							"name": "InterfaceUserWallet",
							"nameLocation": "601:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "2ccb1b30",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferTo",
									"nameLocation": "636:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "dest",
												"nameLocation": "663:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "647:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "647:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "674:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "669:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "669:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "646:35:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "698:0:0"
									},
									"scope": 67,
									"src": "627:72:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 112,
							"src": "591:110:0",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 111,
							"linearizedBaseContracts": [
								111
							],
							"name": "TxAttackWallet",
							"nameLocation": "712:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 71,
									"name": "AttackLog",
									"nameLocation": "739:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"indexed": false,
												"mutability": "mutable",
												"name": "gg",
												"nameLocation": "757:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "749:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "748:12:0"
									},
									"src": "733:28:0"
								},
								{
									"constant": false,
									"id": 73,
									"mutability": "mutable",
									"name": "owner",
									"nameLocation": "783:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 111,
									"src": "767:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 72,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "767:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "817:44:0",
										"statements": [
											{
												"expression": {
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 76,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 73,
														"src": "827:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 79,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "843:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 80,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "843:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "835:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_payable_$",
																"typeString": "type(address payable)"
															},
															"typeName": {
																"id": 77,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "835:8:0",
																"stateMutability": "payable",
																"typeDescriptions": {}
															}
														},
														"id": 81,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "835:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "827:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "827:27:0"
											}
										]
									},
									"id": 85,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 74,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "806:2:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:0:0"
									},
									"scope": 111,
									"src": "795:66:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 93,
										"nodeType": "Block",
										"src": "894:130:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 89,
																"name": "gasleft",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967289,
																"src": "919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 90,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "919:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 88,
														"name": "AttackLog",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "909:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "909:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 92,
												"nodeType": "EmitStatement",
												"src": "904:25:0"
											}
										]
									},
									"id": 94,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "874:2:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "894:0:0"
									},
									"scope": 111,
									"src": "867:157:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1078:79:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "_balance",
														"nameLocation": "1093:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 109,
														"src": "1088:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 99,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1088:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"expression": {
														"arguments": [
															{
																"id": 103,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "1112:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_TxAttackWallet_$111",
																	"typeString": "contract TxAttackWallet"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_TxAttackWallet_$111",
																	"typeString": "contract TxAttackWallet"
																}
															],
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1104:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 101,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1104:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1104:13:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "balance",
													"nodeType": "MemberAccess",
													"src": "1104:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1088:37:0"
											},
											{
												"expression": {
													"id": 107,
													"name": "_balance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 100,
													"src": "1142:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 108,
												"nodeType": "Return",
												"src": "1135:15:0"
											}
										]
									},
									"functionSelector": "12065fe0",
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalance",
									"nameLocation": "1039:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1049:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "1072:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1072:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1071:6:0"
									},
									"scope": 111,
									"src": "1030:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 112,
							"src": "703:456:0",
							"usedErrors": []
						}
					],
					"src": "32:1127:0"
				},
				"id": 0
			}
		}
	}
}